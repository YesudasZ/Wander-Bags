<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Wander Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin-asset/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin-asset/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/admin-asset/imgs/theme/logo.svg" class="logo" alt="Wander Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="http://localhost:4000/admin/adminpanel"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="http://localhost:4000/admin/customers"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Customers</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="http://localhost:4000/admin/categories"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="http://localhost:4000/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="http://localhost:4000/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                
                </li>
                <li class="menu-item  active">
                  <a class="menu-link" href="http://localhost:4000/admin/coupons"> <i class="icon material-icons md-shopping_cart"></i>
                      <span class="text">Coupons</span>
                  </a>
              </li>
          
            <li class="menu-item ">
              <a class="menu-link" href="http://localhost:4000/admin/salesReport"> <i class="icon material-icons md-shopping_cart"></i>
                  <span class="text">Sales Report</span>
              </a>
          </li>
          <li class="menu-item">
            <a class="menu-link" href="http://localhost:4000/admin/offers"> <i class="icon material-icons md-shopping_cart"></i>
                <span class="text">Offers</span>
            </a>
        </li>
                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-transactions-1.html"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Transactions</span>
                    </a>
                    <div class="submenu">
                        <a href="page-transactions-1.html">Transaction 1</a>
                        <a href="page-transactions-2.html">Transaction 2</a>
                        <a href="page-transactions-details.html">Transaction Details</a>
                    </div>
                </li> -->
                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-person"></i>
                        <span class="text">Account</span>
                    </a>
                    <div class="submenu">
                        <a href="page-account-login.html">User login</a>
                        <a href="page-account-register.html">User registration</a>
                        <a href="page-error-404.html">Error 404</a>
                    </div>
                </li> -->
                <!-- <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html"> <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="page-brands.html"> <i class="icon material-icons md-stars"></i>
                        <span class="text">Brands</span> </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" disabled href="#"> <i class="icon material-icons md-pie_chart"></i>
                        <span class="text">Statistics</span>
                    </a>
                </li>
            </ul>
            <hr>
            <ul class="menu-aside">
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-settings"></i>
                        <span class="text">Settings</span>
                    </a>
                 
                </li> -->

            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
      <header class="main-header navbar">
        <div class="col-search">
        </div>
        <div class="col-nav">
            <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
            <ul class="nav">
         
                <li class="nav-item">
                    <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                </li>
                <li class="dropdown nav-item">
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/admin-asset/imgs/people/avatar2.jpg" alt="User"></a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item text-danger" href="/admin/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                    </div>
                </li>
            </ul>
        </div>
    </header>

        <div class="row justify-content-center mt-5 pb-100">
          <div class="col-md-10 table-container">
            <div class="shadow-lg p-5 bg-white rounded ">
        <div class="container">
          <h1 class="mb-4 text-info fw-bold text-center">Coupons</h1>
          <div class="row mt-4">
            <div class="col-md-12">
              <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addCouponModal">Add Coupon</button>
            </div>
          </div>
          <div class="row mt-4">
            <div class="col-md-12">
              <table class="table">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Minimum Amount</th>
                    <th>Maximum Amount</th>
                    <th>Discount</th>
                    <th>Coupon Code</th>
                    <th>Status</th>
                    <th>Action</th>
                    <th>Modify</th>
                  </tr>
                </thead>
                <tbody id="couponTableBody">
                  <!-- Coupons will be dynamically added here -->
                  <% coupons.forEach(coupon => { %>
                    <tr>
                      <td><%= coupon.name %></td>
                      <td><%= coupon.startDate.toLocaleDateString('en-IN') %></td>
                    <td><%= coupon.endDate.toLocaleDateString('en-IN') %></td>
                      <td><%= coupon.minimumAmount %></td>
                      <td><%= coupon.maximumAmount %></td>
                      <td><%= coupon.discount %></td>
                      <td><%= coupon.couponCode %></td>
                      <td><%= coupon.status %></td>
                      
                      <td>
                        <% if (coupon.status === 'Active') { %>
                          <button class="btn btn-warning change-status" data-id="<%= coupon._id %>">Inactive</button>
                        <% } else { %>
                          <button class="btn btn-success change-status" data-id="<%= coupon._id %>">Active</button>
                        <% } %>
                      </td>
                      <td><button id="deletebtn" class="btn btn-danger " data-id="<%= coupon._id %>">Delete</button></td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
        
<!-- Add Coupon Modal -->
<div class="modal fade" id="addCouponModal" tabindex="-1" role="dialog" aria-labelledby="addCouponModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCouponModalLabel">Add Coupon</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="addCouponForm">
          <div class="form-group">
            <label for="couponName">Coupon Name</label>
            <input type="text" class="form-control" id="couponName" required onkeyup="couponNameValidation()">
            <small id="couponNameError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="startDate">Start Date</label>
            <input type="date" class="form-control" id="startDate" required min="<%= new Date().toISOString().split('T')[0] %>" onchange="startDateValidation()">
            <small id="startDateError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="endDate">End Date</label>
            <input type="date" class="form-control" id="endDate" required min="<%= new Date().toISOString().split('T')[0] %>" onchange="endDateValidation()">
            <small id="endDateError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="minAmount">Minimum Purchase Amount</label>
            <input type="number" class="form-control" id="minAmount" required min="1" onkeyup="minAmountValidation()">
            <small id="minAmountError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="maxAmount">Maximum Discount Amount</label>
            <input type="number" class="form-control" id="maxAmount" required min="1" onkeyup="maxAmountValidation()">
            <small id="maxAmountError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="discount">Discount</label>
            <input type="number" class="form-control" id="discount" required min="0.1" max="100" step="0.1" onkeyup="discountValidation()">
            <small id="discountError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="couponCode">Coupon Code</label>
            <input type="text" class="form-control" id="couponCode" required onkeyup="couponCodeValidation()">
            <small id="couponCodeError" class="error"></small>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveCouponBtn">Save</button>
      </div>
    </div>
  </div>
</div>


        <div class="pagination-area pl-50 mt-30 pb-30">
          <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-start">
              <% if(page > 1) { %>
                <li class="page-item">
                  <a class="page-link" href="/admin/coupons?page=<%= page-1 %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                  </a>
                </li>
              <% } %>

              <% for(let i = 1; i <= Math.ceil(total / limit); i++) { %>
                <li class="page-item <%= i === page? 'active' : '' %>"><a class="page-link" href="/admin/coupons?page=<%= i %>"><%= i %></a></li>
              <% } %>

              <% if(page < Math.ceil(total / limit)) { %>
                <li class="page-item">
                  <a class="page-link" href="/admin/coupons?page=<%= page+1 %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                  </a>
                </li>
              <% } %>
            </ul>
          </nav>
        </div>



        
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15 mt-5">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, Wander - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
      </main>
    <script src="/admin-asset/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin-asset/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/admin-asset/js/vendors/select2.min.js"></script>
    <script src="/admin-asset/js/vendors/perfect-scrollbar.js"></script>
    <script src="/admin-asset/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/admin-asset/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/admin-asset/js/main.js" type="text/javascript"></script>
    <script src="/admin-asset/js/custom-chart.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


    <script>
document.getElementById('saveCouponBtn').addEventListener('click', async () => {
  // Frontend form validation
  const isValid = couponNameValidation() &&
    startDateValidation() &&
    endDateValidation() &&
    minAmountValidation() &&
    maxAmountValidation() &&
    discountValidation() &&
    couponCodeValidation();

  if (!isValid) {
    return;
  }

  // Additional validation, e.g., checking if start date is before end date
  const startDate = new Date(document.getElementById('startDate').value);
  const endDate = new Date(document.getElementById('endDate').value);
  if (startDate >= endDate) {
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'Start date must be before end date!'
    });
    return;
  }

  // Fetch request to add coupon
  const couponData = {
    name: document.getElementById('couponName').value.trim(),
    startDate: startDate.toISOString(),
    endDate: endDate.toISOString(),
    minimumAmount: parseFloat(document.getElementById('minAmount').value),
    maximumAmount: parseFloat(document.getElementById('maxAmount').value),
    discount: parseFloat(document.getElementById('discount').value),
    couponCode: document.getElementById('couponCode').value.trim()
  };

  try {
    const response = await fetch('/admin/addCoupon', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(couponData)
    });

    if (response.ok) {
      $('#addCouponModal').modal('hide');
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Coupon added successfully!'
      }).then(() => {
            window.location.reload()
              });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Failed to add coupon. Please try again later.'
      });
    }
  } catch (error) {
    console.error('Error:', error);
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'An unexpected error occurred. Please try again later.'
    });
  }
});

function couponNameValidation() {
  const couponNameValue = document.getElementById("couponName").value.trim();
  const couponNameError = document.getElementById("couponNameError");

  if (couponNameValue === '') {
    couponNameError.textContent = 'Coupon Name is required';
    couponNameError.style.color = 'red';
    document.getElementById("couponName").style.border = "solid 2px red";
    return false;
  }

  couponNameError.textContent = '';
  document.getElementById("couponName").style.border = "solid 2px green";
  return true;
}

function startDateValidation() {
  const startDateValue = document.getElementById("startDate").value;
  const startDateError = document.getElementById("startDateError");

  if (startDateValue === '') {
    startDateError.textContent = 'Start Date is required';
    startDateError.style.color = 'red';
    document.getElementById("startDate").style.border = "solid 2px red";
    return false;
  }

  startDateError.textContent = '';
  document.getElementById("startDate").style.border = "solid 2px green";
  return true;
}

function endDateValidation() {
  const endDateValue = document.getElementById("endDate").value;
  const endDateError = document.getElementById("endDateError");

  if (endDateValue === '') {
    endDateError.textContent = 'End Date is required';
    endDateError.style.color = 'red';
    document.getElementById("endDate").style.border = "solid 2px red";
    return false;
  }

  endDateError.textContent = '';
  document.getElementById("endDate").style.border = "solid 2px green";
  return true;
}

function minAmountValidation() {
const minAmountValue = document.getElementById("minAmount").value;
const minAmountError = document.getElementById("minAmountError");
const minAmountRegex = /^[1-9]\d*$/;

if (minAmountValue === '') {
minAmountError.textContent = 'Minimum Purchase Amount is required';
minAmountError.style.color = 'red';
document.getElementById("minAmount").style.border = "solid 2px red";
return false;
}

if (!minAmountRegex.test(minAmountValue)) {
minAmountError.textContent = 'Minimum Purchase Amount should be a positive number starting from 1';
minAmountError.style.color = 'red';
document.getElementById("minAmount").style.border = "solid 2px red";
return false;
}
minAmountError.textContent = '';
document.getElementById("minAmount").style.border = "solid 2px green";
return true;
}

function maxAmountValidation() {
const maxAmountValue = document.getElementById("maxAmount").value;
const maxAmountError = document.getElementById("maxAmountError");
const maxAmountRegex = /^[1-9]\d*$/;

if (maxAmountValue === '') {
maxAmountError.textContent = 'Maximum Discount Amount is required';
maxAmountError.style.color = 'red';
document.getElementById("maxAmount").style.border = "solid 2px red";
return false;
}
if (!maxAmountRegex.test(maxAmountValue)) {
maxAmountError.textContent = 'Maximum Discount Amount should be a positive number starting from 1';
maxAmountError.style.color = 'red';
document.getElementById("maxAmount").style.border = "solid 2px red";
return false;
}
maxAmountError.textContent = '';
document.getElementById("maxAmount").style.border = "solid 2px green";
return true;
}

function discountValidation() {
const discountValue = document.getElementById("discount").value;
const discountError = document.getElementById("discountError");
if (discountValue === '') {
discountError.textContent = 'Discount is required';
discountError.style.color = 'red';
document.getElementById("discount").style.border = "solid 2px red";
return false;
}
if (discountValue < 0.1 || discountValue > 100 || !isFinite(discountValue)) {
discountError.textContent = 'Discount should be a number between 0.1 and 100';
discountError.style.color = 'red';
document.getElementById("discount").style.border = "solid 2px red";
return false;
}
discountError.textContent = '';
document.getElementById("discount").style.border = "solid 2px green";
return true;
}


function couponCodeValidation() {
const couponCodeValue = document.getElementById("couponCode").value.trim();
const couponCodeError = document.getElementById("couponCodeError");
if (couponCodeValue === '') {
couponCodeError.textContent = 'Coupon Code is required';
couponCodeError.style.color = 'red';
document.getElementById("couponCode").style.border = "solid 2px red";
return false;
}
couponCodeError.textContent = '';
document.getElementById("couponCode").style.border = "solid 2px green";
return true;
}


document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.change-status').forEach(button => {
    button.addEventListener('click', async (e) => {
      const couponId = e.target.dataset.id;
      const status = e.target.textContent.trim();

      // Show SweetAlert2 confirmation dialog
      const result = await Swal.fire({
        title: 'Are you sure?',
        text: `You are about to change the status of this coupon to ${status === 'Active' ? 'Inactive' : 'Active'}.`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
      });

      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/coupons/changeStatus/${couponId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status })
          });

          const data = await response.json();
        
          window.location.reload()
          if (response.ok) {
           
            e.target.textContent = status === 'Active' ? 'Inactive' : 'Active';
            e.target.classList.toggle('btn-danger');
            e.target.classList.toggle('btn-success');
            
            // Update status in the table dynamically
            const statusCell = e.target.closest('tr').querySelector('.status');
            statusCell.textContent = status === 'Active' ? 'Inactive' : 'Active';
           
          } else {
            // Handle error
            console.error(data.error);
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }
    });
  });
});



const deleteCouponButtons = document.querySelectorAll('#deletebtn');

deleteCouponButtons.forEach(button => {
  button.addEventListener('click', async () => {
    const couponId = button.dataset.id;
    const confirmed = await Swal.fire({
      title: 'Are you sure?',
      text: 'You are about to delete this coupon.',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => result.isConfirmed);

    if (confirmed) {
      try {
        const response = await fetch(`/admin/coupons/${couponId}`, {
          method: 'DELETE'
        });

        if (response.ok) {
          Swal.fire('Success', 'Coupon successfully deleted', 'success');
          button.closest('tr').remove();
        } else {
          Swal.fire('Error', 'Something went wrong', 'error');
        }
      } catch (error) {
        console.error(error);
        Swal.fire('Error', 'Something went wrong', 'error');
      }
    }
  });
});

    </script>

</body>

</html>