<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
  <meta charset="utf-8">
  <title>Wander - eCommerce HTML Template</title>
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:title" content="">
  <meta property="og:type" content="">
  <meta property="og:url" content="">
  <meta property="og:image" content="">
  <!-- Favicon -->
  <link rel="shortcut icon" type="image/x-icon" href="user-assets/imgs/theme/favicon.svg">
  <!-- Template CSS -->
  <link rel="stylesheet" href="user-assets/css/main.css?v=3.4">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.11.0/toastify.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5+Z3+Xf1QojCaB40CKvL+2K4Y5p4ef5uyyJ5fksU" crossorigin="anonymous">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="SHA-384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.2/css/bootstrap.min.css" integrity="sha512-..." crossorigin="anonymous" />

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <style>



  /* Invoice Styles */
  .invoice {
    font-family: Arial, sans-serif;
    border: 1px solid #ccc;
    padding: 20px;
    max-width: 800px;
    margin: 0 auto;
  }

  .invoice-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  .invoice-logo img {
    max-width: 150px;
  }

  .invoice-title {
    font-size: 24px;
    font-weight: bold;
    text-align: center;
  }

  .invoice-info {
    margin-bottom: 20px;
  }

  .invoice-table {
    width: 100%;
    border-collapse: collapse;
  }

  .invoice-table th,
  .invoice-table td {
    padding: 10px;
    border: 1px solid #ccc;
    text-align: left;
  }

  .invoice-table th {
    background-color: #f2f2f2;
  }

  .invoice-total {
    text-align: right;
    margin-top: 20px;
    font-weight: bold;
  }






.invoice-box {
      max-width: 800px;
      margin: auto;
      padding: 30px;
      border: 1px solid #eee;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
      font-size: 16px;
      line-height: 24px;
      color: #555;
    }

    .invoice-box table {
      width: 100%;
      text-align: left;
    }

    .invoice-box table td {
      padding: 5px;
      vertical-align: top;
    }

    .invoice-box table tr td:last-child {
      text-align: right;
    }

    .invoice-box table tr.top table td {
      padding-bottom: 20px;
    }

    .invoice-box table tr.top table td.title {
      font-size: 45px;
      line-height: 45px;
      color: #333;
    }

    .invoice-box table tr.information table td {
      padding-bottom: 40px;
    }

    .invoice-box table tr.heading td {
      background: #eee;
      border-bottom: 1px solid #ddd;
      font-weight: bold;
    }

    .invoice-box table tr.details td {
      padding-bottom: 20px;
    }

    .invoice-box table tr.item td {
      border-bottom: 1px solid #eee;
    }

    .invoice-box table tr.item.last td {
      border-bottom: none;
    }

    .invoice-box table tr.total td:nth-child(2) {
      border-top: 2px solid #eee;
      font-weight: bold;
    }






.table-header th {
  font-weight: bold;
}

.table-header th,
.table-header td {
  text-align: center;
}

.table .text-warning {
  color: orange;
}

.table .text-success {
  color: green;
}




    .error-message {
      color: red;
      font-size: 0.8rem;
    }

    /* Dashboard Menu Styles */
    .dashboard-menu {
      background-color: #f8f9fa;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .dashboard-menu ul {
      list-style: none;
      padding: 0;
    }

    .dashboard-menu .nav-link {
      color: #343a40;
      text-decoration: none;
      transition: all 0.3s ease;
    }

    .dashboard-menu .nav-link:hover {
      color: #007bff;
    }

    /* Dashboard Content Styles */
    .dashboard-content {
      padding: 20px;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    .dashboard-content .card-header {
      background-color: #f8f9fa;
      border-bottom: 1px solid #dee2e6;
    }

    .dashboard-content .card-header h5 {
      color: #343a40;
    }

    .dashboard-content .btn-small {
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 5px;
      padding: 5px 10px;
      text-decoration: none;
      transition: all 0.3s ease;
    }

    .dashboard-content .btn-small:hover {
      background-color: #0056b3;
    }

    @media (max-width: 767.98px) {
      .dashboard-menu {
        margin-bottom: 20px;
      }
    }

    /* Sidebar Styles */
    .sidebar {
      height: 100%;
      width: 250px;
      background-color: #f8f9fa;
      padding: 20px;
    }

    /* Main Content Styles */
    .main-content {
      margin-left: 250px;
      /* Same width as the sidebar */
      padding: 20px;
    }

    /* Footer Styling */
    footer.main {
      padding-top: 40px;
      padding-bottom: 40px;
    }

    .widget-about p {
      color: #a8a8a8;
      line-height: 1.8;
    }

    .social-icons a {
      display: inline-block;
      margin-right: 10px;
    }

    .widget-title {
      color: #fff;
      font-weight: bold;
    }

    .footer-list li {
      list-style: none;
    }

    .download-app img {
      max-width: 130px;
      margin-right: 10px;
      margin-bottom: 10px;
    }

    .font-sm {
      font-size: 14px;
    }

    .text-light {
      color: #fff !important;
    }

    .text-muted {
      color: #a8a8a8 !important;
    }

    .header-info-right ul li {
      display: inline;
      margin-left: 20px;
    }

    .header-info-right ul li:first-child {
      margin-left: 0;
    }

    .header-info-right a {
      text-decoration: none;
      color: #343a40;
      /* Adjust text color as needed */
    }

    .header-info-right a:hover {
      text-decoration: underline;
    }

    .header-info-right .fi-rs-user {
      margin-right: 5px;
    }
  </style>
</head>

<body>
  <!-- Quick view -->

  <header class="header-area header-style-4 header-height-2">
    <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="header-wrap d-flex justify-content-between align-items-center">
                <div class="logo logo-width-1">
                    <a href="index.html"><img src="user-assets/imgs/theme/logo.svg" alt="logo"></a>
                </div>
                <div class="header-right d-flex align-items-center">
                    <div class="search-style-2">
                        <form action="#">
                            <select class="select-active">
                                <option>All Categories</option>
                            </select>
                            <input type="text" placeholder="Search for items...">
                        </form>
                    </div>
                    <div class="header-action-right d-flex align-items-center">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                              <a href="/wishList">
                                <img class="svgInject" alt="Wander" src="user-assets/imgs/theme/icons/icon-heart.svg">
                                <% if (wishlistCount > 0) { %>
                                  <span class="pro-count blue"><%= wishlistCount %></span>
                                <% } %>
                              </a>
                            </div>
                            <div class="header-action-icon-2">
                              <a class="mini-cart-icon" href="/cart">
                                <img alt="Wander" src="user-assets/imgs/theme/icons/icon-cart.svg">
                                <% if (cartCount > 0) { %>
                                  <span class="pro-count blue"><%= cartCount %></span>
                                <% } %>
                              </a>
                            </div>
                          </div>
                        <div class="header-info header-info-right text-end">
                            <ul class="list-inline mb-0">
                           
                                <li class="dropdown nav-item m-5">
                                    <a class="dropdown-toggle text-black" href="#" role="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fi-rs-user"></i> <%= user.name %>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                                        <a class="dropdown-item" href="/profile"><i class="material-icons md-perm_identity"></i>Profile</a>
                                        <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Orders</a>
                                        <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item text-danger" href="/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-bottom header-bottom-bg-color sticky-bar">
        <div class="container">
            <div class="header-wrap header-space-between position-relative">
                <div class="logo logo-width-1 d-block d-lg-none">
                    <a href="index.html"><img src="user-assets/imgs/theme/logo.svg" alt="logo"></a>
                </div>
                <div class="header-nav d-none d-lg-flex">
                    <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                        <nav>
                            <ul>
                                <li><a class="active" href="/home">Home</a></li>
                                <li><a href="/shop">Shop</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

  <main class="main">
    <section class="pt-20 pb-50">
      <div class="content p-5 m-5" >
        <div class="row">
          <div class="col-md-3">
            <div class="dashboard-menu">
              <ul class="nav flex-column" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="account-detail-tab" data-bs-toggle="tab" href="#account-detail"
                    role="tab" aria-controls="account-detail" aria-selected="false">
                    <i class="fi-rs-user mr-10"></i>Account details
                  </a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab"
                    aria-controls="address" aria-selected="true">
                    <i class="fi-rs-marker mr-10"></i>My Address
                  </a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="addaddress-tab" data-bs-toggle="tab" href="#addaddress" role="tab"
                    aria-controls="addaddress" aria-selected="true">
                    <i class="fi-rs-marker mr-10"></i>Add Address
                  </a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab"
                    aria-controls="orders" aria-selected="false">
                    <i class="fi-rs-shopping-bag mr-10"></i>Orders
                  </a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#Wallet" role="tab"
                    aria-controls="orders" aria-selected="false"><i class="fi-rs-shopping-bag mr-10"></i>Wallet</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/logout">
                    <i class="fi-rs-sign-out mr-10"></i>Logout
                  </a>
                </li>
              </ul>
            </div>
          </div>
          <div class="col-md-9">
            <div class="tab-content dashboard-content">
              <div class="tab-pane fade active show" id="account-detail" role="tabpanel"
                aria-labelledby="account-detail-tab">
                <div class="card">
                  <div class="card-header">
                    <h5>Account Details</h5>
                  </div>
                  <div class="card-body">
                    <div class="row">
                      <div class="form-group col-md-6">
                        <label>Name <span class="required">*</span></label>
                        <input class="form-control square" value="<%= user.name %>" name="name" type="text" readonly>
                        <button type="button" class="btn btn-link" data-bs-toggle="modal"
                          data-bs-target="#editNameModal">Edit</button>
                      </div>
                      <div class="form-group col-md-6">
                        <label>Mobile <span class="required">*</span></label>
                        <input class="form-control square" value="<%= user.mobile %>" name="mobile" type="number"
                          readonly>
                      </div>
                      <div class="form-group col-md-6">
                        <label>Email Address <span class="required">*</span></label>
                        <input class="form-control square" value="<%= user.email %>" name="email" type="email" readonly>
                      </div>
                      <div class="col-md-12">
                        <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                          data-bs-target="#changePasswordModal">Change Password</button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                <div class="card" >
                  
                    <h5 class="mb-4 text-black fw-bold text-center pt-2">My Orders</h5>
                 
                  <div style="max-height: 500px; overflow-y: auto;" >
                  <table class="table table-hover" >
                    <thead class="text-center">
                      <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Status</th>
                        <th>Amount</th>
                        <th>Action</th>
                        <th>Details</th>
                      </tr>
                    </thead>
                    <tbody class="text-center">
                      <% orders.forEach(order=> { %>
                        <% order.items.forEach((item, index)=> { %>
                          <tr class="order-row" data-order-id="<%= order._id %>">
                            <td>
                              <div class="d-flex align-items-center">
                                <img src="/productimages/<%= item.image[0] %>" alt="<%= item.title %>" class="mr-3"
                                  style="width: 100px; height: 100px;">
                                <span>
                                  <%= item.title %>
                                </span>
                              </div>
                            </td>
                            <td>
                              <%= item.quantity %>
                            </td>
                            <td><span
                                class="badge order-status badge-<%= order.orderStatus.toLowerCase() === 'pending' ? 'warning' : order.orderStatus.toLowerCase() === 'confirmed' ? 'info' : order.orderStatus.toLowerCase() === 'shipped' ? 'primary' : order.orderStatus.toLowerCase() === 'delivered' ? 'success' : 'danger' %>">
                                <%= order.orderStatus %>
                              </span></td>
                              <td>
                                <!-- <span
                                class="badge order-status badge-<%= order.paymentStatus === 'Pending' ? 'info' : order.paymentStatus === 'Success' ? 'success' : order.paymentStatus === 'Refunded' ? 'secondary' : order.paymentStatus === 'Failed' ? 'danger' : 'danger' %>">
                                <%= order.paymentStatus %>
                              </span> -->
                         <strong><%= order.billTotal %></strong>
                            </td>
                        
                             
                            <td>
                              <%   if (order.paymentStatus === 'Failed') { %>
                                <button type="button" class="btn btn-warning col-10" onclick="initiateFailureRazorPayPayment('<%= order._id %>','<%= order.billTotal %>')">Retry
                                  </button>
                                  <% } else if (order.orderStatus.toLowerCase()==='pending' ||
                                order.orderStatus.toLowerCase()==='confirmed' ) { %>
                                <button type="button" class="btn btn-danger btn-sm" data-toggle="modal"
                                  data-target="#cancelOrderModal" data-order-id="<%= order._id %>">Cancel Order</button>
                                <% } else if (order.orderStatus.toLowerCase()==='delivered' ) { %>
                                  <button type="button" class="btn btn-danger btn-sm" data-toggle="modal"
                                    data-target="#returnOrderModal" data-order-id="<%= order._id %>">Return
                                    Order</button>
                                  <% } else { %>
                                    <button class="btn btn-secondary btn-sm" disabled>Cancel Order</button>
                                    <% } %>
                            </td>
                            <td>
                              
            <button type="button" class="btn  btn-outline-secondary" data-toggle="modal" data-target="#orderDetailsModal<%= order._id %>">
              View Details
            </button>



    <!-- Order Details Modal -->
    <div class="modal fade" id="orderDetailsModal<%= order._id %>" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
          <div class="modal-header">
        
            <% if ( order.paymentStatus === 'Failed') { %>
            <h1 class="mb-4 text-danger fw-bold text-center">Payment Failed</h1>
            <% } else { %>
              <h1 class="modal-title mb-4 text-info fw-bold text-center" id="orderDetailsModalLabel">Order Details</h1>
              <% } %>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="col-md-6">
                <h6>Order Information</h6>
            

                <p><strong>Order ID:</strong> <%= order.oId %></p>
                <p><strong>Customer:</strong> <%= order.user.name %></p>
                <p><strong>Order Date:</strong> <%= new Date(order.orderDate).toLocaleString() %></p>
                <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                <p><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
                <p><strong>Order Status:</strong> <%= order.orderStatus %></p>
                <p><strong>Shipping Address:</strong> <%= order.shippingAddress.street %>, <%= order.shippingAddress.city %>, <%= order.shippingAddress.state %>, <%= order.shippingAddress.country %>, <%= order.shippingAddress.postalCode %></p>
                <p><strong>Order Notes:</strong> <%= order.orderNotes %></p>
                <p><strong>Cancellation Reason:</strong> <%= order.cancellationReason %></p>
                
              </div>
              <div class="col-md-6">
                <h6>Order Items</h6>
                <ul class="list-group">
                  <% order.items.forEach(item => { %>
                  <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                      <% if (item.image && item.image.length > 0) { %>
                      <img src="/productimages/<%=item.image[0] %>" alt="<%= item.title %>" class="img-fluid mr-3" style="max-width: 50px;">
                      <% } %>
                      <%= item.title %>
                    </div>
                    <span class="badge badge-primary badge-pill"><%= item.productPrice %> x <%= item.quantity %> = <%= item.price %></span>
                  </li>
                  <% }) %>
                </ul>
                <p><strong>Coupon Discount:</strong> <%= order.couponAmount %></p>
                <p class="mt-3"><strong>Bill Total:</strong> <%= order.billTotal %></p>
              </div>
            </div>
          </div>
         

            <% if ( order.paymentStatus !== 'Failed' ||order.orderStatus !== 'Cancelled' ||order.orderStatus !== 'Returned') { %>
          
            <div>
            <a href="/orders/<%= order._id %>/invoice" target="_blank" class="btn btn-primary">Download Invoice</a>
          </div>
          <% } %>
   
          





  

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

                            </td>
                          </tr>
                          <% }) %>
                            <% }) %>
                    </tbody>
                  </table>
                </div>
                </div>
              </div>


              <!-- Return Order Modal -->
              <div class="modal fade" id="returnOrderModal" tabindex="-1" role="dialog"
                aria-labelledby="returnOrderModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="returnOrderModalLabel">Return Order</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <form id="returnOrderForm">
                        <div class="form-group">
                          <label for="returnReason">Reason for Return</label>
                          <input type="text" class="form-control" id="returnReason" required>
                        </div>
                      </form>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" id="confirmReturnOrder">Confirm Return</button>
                    </div>
                  </div>
                </div>
              </div>

              <div class="tab-pane fade" id="Wallet" role="tabpanel" aria-labelledby="orders-tab">
                <h5 class="mb-4 text-info fw-bold text-center pt-2">My Wallet</h5>
                <div class="wallet-info " style="width: fit-content;">
                  <h6 class="wallet-balance fw-bold text-success">Wallet Balance: <%= wallet ? wallet.walletBalance.toFixed(2) : '0.00' %></h6>
                </div>
                <div class="card-body"  style="max-height: 500px; overflow-y: auto;" >
                  <div class="table-responsive">
                    <table class="table table-hover">
                      <thead>
                        <tr class="table-header">
                          <th>Transaction Date</th>
                          <th>Description</th>
                          <th>Status</th>
                          <th>Payment Amount</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (wallet && wallet.transactions.length > 0) { %>
                          <% wallet.transactions.forEach(transaction => { %>
                            <tr class="<%= transaction.type === 'Refund' || transaction.type === 'Credit' ? 'table-success' : 'table-danger' %>">
                              <td><%= new Date(transaction.transactionDate).toLocaleDateString() %></td>
                              <td><%= transaction.description %></td>
                              <td><%= transaction.type %></td>
                              <td><%= transaction.amount.toFixed(2) %></td>
                            </tr>
                          <% }) %>
                        <% } else { %>
                          <tr>
                            <td colspan="4">No transactions found.</td>
                          </tr>
                        <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
              

              
              



              <!-- Cancel Order Modal -->
              <div class="modal fade" id="cancelOrderModal" tabindex="-1" role="dialog"
                aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="cancelOrderModalLabel">Cancel Order</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <form id="cancelOrderForm">
                        <div class="form-group">
                          <label for="cancellationReason">Reason for Cancellation</label>
                          <textarea class="form-control" id="cancellationReason" rows="3" required></textarea>
                        </div>
                      </form>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-danger" id="confirmCancelOrder">Confirm Cancel</button>
                    </div>
                  </div>
                </div>
              </div>




              <div class="tab-pane fade" id="addaddress" role="tabpanel" aria-labelledby="addaddress-tab">
                <div class="card">
                  <div class="card-header">
                    <h5>Add Address</h5>
                  </div>
                  <div class="card-body">
                    <form id="addAddressForm" method="post" name="enq">
                      <div class="row">
                        <div class="form-group col-md-6">
                          <label>House Name / Flat No.<span class="required">*</span></label>
                          <input class="form-control square" name="houseName" id="houseName" type="text" onkeyup="houseNameValidation()">
                          <small id="houseNameError" class="error"></small>
                        </div>
                        <div class="form-group col-md-6">
                          <label>Street<span class="required">*</span></label>
                          <input class="form-control square" name="street" id="street" type="text" onkeyup="streetValidation()">
                          <small id="streetError" class="error"></small>
                        </div>
                        <div class="form-group col-md-12">
                          <label>City <span class="required">*</span></label>
                          <input class="form-control square" name="city" id="city" type="text" pattern="^[a-zA-Z\s]+$" onkeyup="cityValidation()">
                          <small id="cityError" class="error"></small>
                        </div>
                        <div class="form-group col-md-12">
                          <label>State <span class="required">*</span></label>
                          <input class="form-control square" name="state" id="state" type="text" pattern="^[a-zA-Z\s]+$" onkeyup="stateValidation()">
                          <small id="stateError" class="error"></small>
                        </div>
                        <div class="form-group col-md-12">
                          <label>Country <span class="required">*</span></label>
                          <input class="form-control square" name="country" id="country" type="text" pattern="^[a-zA-Z\s]+$" onkeyup="countryValidation()">
                          <small id="countryError" class="error"></small>
                        </div>
                        <div class="form-group col-md-12">
                          <label>Postalcode <span class="required">*</span></label>
                          <input class="form-control square" name="postalCode" id="postalCode" type="text" pattern="^[0-9]{6}$" onkeyup="postalCodeValidation()">
                          <small id="postalCodeError" class="error"></small>
                        </div>
                        <div class="form-group col-md-12">
                          <label>Type <span class="required">*</span></label>
                          <select class="form-control" id="addressType" name="addressType" onchange="addressTypeValidation()">
                            <option value="">Select Address Type</option>
                            <option value="home">Home</option>
                            <option value="office">Office</option>
                          </select>
                          <small id="addressTypeError" class="error"></small>
                        </div>
                        <div class="col-md-12">
                          <button type="submit" class="btn btn-fill-out submit" name="submit" value="Submit">Save</button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>

              <!-- Profile Address Management Section -->
              <div class="tab-pane fade" id="address" role="tabpanel" aria-labelledby="address-tab">
                <div class="row">
                  <% user.address.forEach((address, index)=> { %>
                    <div class="col-lg-6 mb-4" id="addressSection_<%= address._id %>">
                      <div class="card mb-3 mb-lg-0">
                        <div class="card-header">
                          <h5 class="mb-0">
                            <%= address.type.charAt(0).toUpperCase() + address.type.slice(1) %> Address
                          </h5>
                        </div>
                        <div class="card-body">
                          <ul class="list-unstyled">
                            <li><strong>House Name / Flat No.:</strong> <span class="house-name">
                                <%= address.houseName %>
                              </span></li>
                            <li><strong>Street:</strong> <span class="street">
                                <%= address.street %>
                              </span></li>
                            <li><strong>City:</strong> <span class="city">
                                <%= address.city %>
                              </span></li>
                            <li><strong>State:</strong> <span class="state">
                                <%= address.state %>
                              </span></li>
                            <li><strong>Country:</strong> <span class="country">
                                <%= address.country %>
                              </span></li>
                            <li><strong>Postal Code:</strong> <span class="postal-code">
                                <%= address.postalCode %>
                              </span></li>
                          </ul>
                          <!-- Edit and Delete buttons -->
                          <div class="d-flex justify-content-between align-items-center mt-3">
                            <button type="button" class="btn btn-primary" data-toggle="modal"
                              data-target="#editAddressModal<%= index %>">Edit</button>
                            <button type="button" class="btn btn-danger" data-toggle="modal"
                              data-target="#deleteAddressModal<%= index %>">Delete</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% }) %>
                </div>
              </div>

             <!-- Edit Address Modal -->
<% user.address.forEach((address, index)=> { %>
  <div class="modal fade" id="editAddressModal<%= index %>" tabindex="-1" role="dialog" aria-labelledby="editAddressModalLabel<%= index %>" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editAddressModalLabel<%= index %>">Edit Address</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Form for editing address -->
          <form id="editAddressForm<%= index %>" class="edit-address-form" data-address-id="<%= address._id %>">
            <div class="form-group">
              <label for="houseName<%= index %>">House Name / Flat No.<span class="required">*</span></label>
              <input type="text" class="form-control" id="houseName<%= index %>" name="houseName" value="<%= address.houseName %>" required>
              <small id="houseNameError<%= index %>" class="error"></small>
            </div>
            <div class="form-group">
              <label for="street<%= index %>">Street<span class="required">*</span></label>
              <input type="text" class="form-control" id="street<%= index %>" name="street" value="<%= address.street %>" required>
              <small id="streetError<%= index %>" class="error"></small>
            </div>
            <div class="form-group">
              <label for="city<%= index %>">City <span class="required">*</span></label>
              <input type="text" class="form-control" id="city<%= index %>" name="city" value="<%= address.city %>" pattern="^[a-zA-Z\s]+$" required>
              <small id="cityError<%= index %>" class="error"></small>
            </div>
            <div class="form-group">
              <label for="state<%= index %>">State <span class="required">*</span></label>
              <input type="text" class="form-control" id="state<%= index %>" name="state" value="<%= address.state %>" pattern="^[a-zA-Z\s]+$" required>
              <small id="stateError<%= index %>" class="error"></small>
            </div>
            <div class="form-group">
              <label for="country<%= index %>">Country <span class="required">*</span></label>
              <input type="text" class="form-control" id="country<%= index %>" name="country" value="<%= address.country %>" pattern="^[a-zA-Z\s]+$"  required>
              <small id="countryError<%= index %>" class="error"></small>
            </div>
            <div class="form-group">
              <label for="postalCode<%= index %>">Postal Code<span class="required">*</span></label>
              <input type="text" class="form-control" id="postalCode<%= index %>" name="postalCode" value="<%= address.postalCode %>" pattern="^[0-9]{6}$" required>
              <small id="postalCodeError<%= index %>" class="error"></small>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Update</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <% }) %>


                  <!-- Delete Address Modal -->
                  <% user.address.forEach((address, index)=> { %>
                    <div class="modal fade" id="deleteAddressModal<%= index %>" tabindex="-1" role="dialog"
                      aria-labelledby="deleteAddressModalLabel<%= index %>" aria-hidden="true">
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title" id="deleteAddressModalLabel<%= index %>">Delete Address</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                            Are you sure you want to delete this address?
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-danger"
                              onclick="confirmDeleteAddress('<%= address._id %>')">Confirm</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% }) %>


            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

<!-- Edit Name Modal -->
<div class="modal fade" id="editNameModal" tabindex="-1" aria-labelledby="editNameModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editNameModalLabel">Edit Name</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editNameForm">
          <div class="form-group">
            <label for="newName">New Name</label>
            <input type="text" class="form-control" id="newName" name="newName" placeholder="Enter new name" onkeyup="validateName()" required>
            <small id="newNameError" class="error"></small>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveNameBtn">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- Change Password Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="changePasswordForm">
          <div class="form-group">
            <label for="currentPassword">Current Password</label>
            <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter current password">
          </div>
          <div class="form-group">
            <label for="newPassword">New Password</label>
            <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" onkeyup="newPasswordValidation()">
            <small id="newPasswordError" class="error"></small>
          </div>
          <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" onkeyup="confirmPasswordValidation()">
            <small id="confirmPasswordError" class="error"></small>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="changePasswordBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

  <!-- Toast notification HTML for password mismatch -->
  <div class="toast" id="passwordMismatchToast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Error</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      New password and confirm password must match.
    </div>
  </div>

  <!-- Toast notification HTML for password change success -->
  <div class="toast" id="passwordSuccessToast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Success</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Password changed successfully.
    </div>
  </div>

  <!-- Toast notification HTML for password change error -->
  <div class="toast" id="passwordErrorToast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <strong class="me-auto">Error</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Failed to change password. Please check your current password.
    </div>
  </div>

  <footer class="main bg-secondary text-light">
    <section class="section-padding footer-mid">
      <div class="container pt-15 pb-20">
        <div class="row">
          <div class="col-lg-4 col-md-6">
            <div class="widget-about font-md mb-md-5 mb-lg-0">
              <div class="logo logo-width-1 wow fadeIn animated">
                <a href="index.html"><img src="user-assets/imgs/theme/logo.svg" alt="logo"></a>
              </div>
              <h5 class="mt-20 mb-10 fw-600 text-grey-4 wow fadeIn animated">Contact</h5>
              <p class="wow fadeIn animated">
                <strong>Address: </strong>562 Wellington Road, Street 32, San Francisco
              </p>
              <p class="wow fadeIn animated">
                <strong>Phone: </strong>+01 2222 365 /(+91) 01 2345 6789
              </p>
              <p class="wow fadeIn animated">
                <strong>Hours: </strong>10:00 - 18:00, Mon - Sat
              </p>
              <h5 class="mb-10 mt-30 fw-600 text-grey-4 wow fadeIn animated">Follow Us</h5>
              <div class="mobile-social-icon wow fadeIn animated mb-sm-5 mb-md-0">
                <a href="#"><img src="user-assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                <a href="#"><img src="user-assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                <a href="#"><img src="user-assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                <a href="#"><img src="user-assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                <a href="#"><img src="user-assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
              </div>
            </div>
          </div>
          <div class="col-lg-2 col-md-3">
            <h5 class="widget-title wow fadeIn animated">About</h5>
            <ul class="footer-list wow fadeIn animated mb-sm-5 mb-md-0">
              <li><a href="#">About Us</a></li>
              <li><a href="#">Delivery Information</a></li>
              <li><a href="#">Privacy Policy</a></li>
              <li><a href="#">Terms &amp; Conditions</a></li>
              <li><a href="#">Contact Us</a></li>
              <li><a href="#">Support Center</a></li>
            </ul>
          </div>
          <div class="col-lg-2  col-md-3">
            <h5 class="widget-title wow fadeIn animated">My Account</h5>
            <ul class="footer-list wow fadeIn animated">
              <li><a href="#">Sign In</a></li>
              <li><a href="#">View Cart</a></li>
              <li><a href="#">My Wishlist</a></li>
              <li><a href="#">Track My Order</a></li>
              <li><a href="#">Help</a></li>
              <li><a href="#">Order</a></li>
            </ul>
          </div>
          <div class="col-lg-4">
            <h5 class="widget-title wow fadeIn animated">Install App</h5>
            <div class="row">
              <div class="col-md-8 col-lg-12">
                <p class="wow fadeIn animated">From App Store or Google Play</p>
                <div class="download-app wow fadeIn animated">
                  <a href="#" class="hover-up mb-sm-4 mb-lg-0"><img class="active"
                      src="user-assets/imgs/theme/app-store.jpg" alt=""></a>
                  <a href="#" class="hover-up"><img src="user-assets/imgs/theme/google-play.jpg" alt=""></a>
                </div>
              </div>
              <div class="col-md-4 col-lg-12 mt-md-3 mt-lg-0">
                <p class="mb-20 wow fadeIn animated">Secured Payment Gateways</p>
                <img class="wow fadeIn animated" src="user-assets/imgs/theme/payment-method.png" alt="">
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
    <div class="container pb-20 wow fadeIn animated">
      <div class="row">
        <div class="col-12 mb-20">
          <div class="footer-bottom"></div>
        </div>
        <div class="col-lg-6">
          <p class="float-md-left font-sm text-muted mb-0">&copy; 2022, <strong class="text-brand">Wander</strong> -
            HTML Ecommerce Template </p>
        </div>
        <div class="col-lg-6">
          <p class="text-lg-end text-start font-sm text-muted mb-0">
            Designed by <a href="http://alithemes.com" target="_blank">Alithemes.com</a>. All rights reserved
          </p>
        </div>
      </div>
    </div>
  </footer>
  <!-- Preloader Start -->
  <div id="preloader-active">
    <div class="preloader d-flex align-items-center justify-content-center">
      <div class="preloader-inner position-relative">
        <div class="text-center">
          <h5 class="mb-5">Now Loading</h5>
          <div class="loader">
            <div class="bar bar1"></div>
            <div class="bar bar2"></div>
            <div class="bar bar3"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Vendor JS-->
  <script src="user-assets/js/vendor/modernizr-3.6.0.min.js"></script>
  <script src="user-assets/js/vendor/jquery-3.6.0.min.js"></script>
  <script src="user-assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
  <script src="user-assets/js/vendor/bootstrap.bundle.min.js"></script>
  <script src="user-assets/js/plugins/slick.js"></script>
  <script src="user-assets/js/plugins/jquery.syotimer.min.js"></script>
  <script src="user-assets/js/plugins/wow.js"></script>
  <script src="user-assets/js/plugins/jquery-ui.js"></script>
  <script src="user-assets/js/plugins/perfect-scrollbar.js"></script>
  <script src="user-assets/js/plugins/magnific-popup.js"></script>
  <script src="user-assets/js/plugins/select2.min.js"></script>
  <script src="user-assets/js/plugins/waypoints.js"></script>
  <script src="user-assets/js/plugins/counterup.js"></script>
  <script src="user-assets/js/plugins/jquery.countdown.min.js"></script>
  <script src="user-assets/js/plugins/images-loaded.js"></script>
  <script src="user-assets/js/plugins/isotope.js"></script>
  <script src="user-assets/js/plugins/scrollup.js"></script>
  <script src="user-assets/js/plugins/jquery.vticker-min.js"></script>
  <script src="user-assets/js/plugins/jquery.theia.sticky.js"></script>
  <script src="user-assets/js/plugins/jquery.elevatezoom.js"></script>
  <!-- Template  JS -->
  <script src="./user-assets/js/main.js?v=3.4"></script>
  <script src="./user-assets/js/shop.js?v=3.4"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.11.0/toastify.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-0VtUxEz1c4t3ZT5Yel5zPFJfnz9ao0MWr+Q4+agBkoBB1jE2xkkjzr8NT/dWclgl"
    crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.11.0/toastify.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
    integrity="SHA-384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
    crossorigin="anonymous"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>




  <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.0/pdfmake.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.0/vfs_fonts.js"></script> -->

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.debug.js"></script>
  <script>


// Function to handle changing the password
document.getElementById('changePasswordBtn').addEventListener('click', async () => {
  const currentPassword = document.getElementById('currentPassword').value.trim();
  const newPassword = document.getElementById('newPassword').value.trim();
  const confirmPassword = document.getElementById('confirmPassword').value.trim();

  const isNewPasswordValid = newPasswordValidation();
  const isConfirmPasswordValid = confirmPasswordValidation();

  if (!isNewPasswordValid || !isConfirmPasswordValid || newPassword !== confirmPassword) {
    return;
  }

  try {
    const response = await fetch('/profile/changePassword', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ currentPassword, newPassword })
    });
    if (response.ok) {
      // Password changed successfully
      $('#changePasswordModal').modal('hide');
      window.location.reload();
    } else {
      // Handle error if any
      alert('Failed to change password. Please check your current password.');
    }
  } catch (error) {
    console.error('Error:', error);
  }
});

function newPasswordValidation() {
  const newPasswordValue = document.getElementById("newPassword").value.trim();
  const newPasswordError = document.getElementById("newPasswordError");
  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

  if (newPasswordValue === '') {
    newPasswordError.textContent = 'New Password is required';
    newPasswordError.style.color = 'red';
    document.getElementById("newPassword").style.border = "solid 2px red";
    return false;
  }

  if (!passwordRegex.test(newPasswordValue)) {
    newPasswordError.textContent = 'New Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character';
    newPasswordError.style.color = 'red';
    document.getElementById("newPassword").style.border = "solid 2px red";
    return false;
  }

  newPasswordError.textContent = '';
  document.getElementById("newPassword").style.border = "solid 2px green";
  return true;
}

function confirmPasswordValidation() {
  const confirmPasswordValue = document.getElementById("confirmPassword").value.trim();
  const newPasswordValue = document.getElementById("newPassword").value.trim();
  const confirmPasswordError = document.getElementById("confirmPasswordError");

  if (confirmPasswordValue === '') {
    confirmPasswordError.textContent = 'Confirm Password is required';
    confirmPasswordError.style.color = 'red';
    document.getElementById("confirmPassword").style.border = "solid 2px red";
    return false;
  }

  if (confirmPasswordValue !== newPasswordValue) {
    confirmPasswordError.textContent = 'Confirm Password does not match New Password';
    confirmPasswordError.style.color = 'red';
    document.getElementById("confirmPassword").style.border = "solid 2px red";
    return false;
  }

  confirmPasswordError.textContent = '';
  document.getElementById("confirmPassword").style.border = "solid 2px green";
  return true;
}






    document.getElementById("addAddressForm").addEventListener("submit", async function (event) {
  event.preventDefault(); // Prevent form submission

  const isValid = houseNameValidation() &&
    streetValidation() &&
    cityValidation() &&
    stateValidation() &&
    countryValidation() &&
    postalCodeValidation() &&
    addressTypeValidation();

  if (isValid) {
    const houseName = document.getElementById("houseName").value.trim();
    const street = document.getElementById("street").value.trim();
    const city = document.getElementById("city").value.trim();
    const state = document.getElementById("state").value.trim();
    const country = document.getElementById("country").value.trim();
    const postalCode = document.getElementById("postalCode").value.trim();
    const addressType = document.getElementById("addressType").value;

    try {
      const response = await fetch('/profile/addAddress', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          houseName,
          street,
          city,
          state,
          country,
          postalCode,
          addressType
        })
      });
      if (response.ok) {
        document.getElementById("addAddressForm").reset();
        Toastify({
          text: "Address added successfully",
          duration: 3000,
          gravity: "top",
          position: 'right',
          backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
        }).showToast();
      } else {
        Toastify({
          text: "Failed to add address",
          duration: 3000,
          gravity: "top",
          position: 'right',
          backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)",
        }).showToast();
      }
    } catch (error) {
      console.error(error);
      Toastify({
        text: "An error occurred",
        duration: 3000,
        gravity: "top",
        position: 'right',
        backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)",
      }).showToast();
    }
  }
});

function houseNameValidation() {
  const houseNameValue = document.getElementById("houseName").value.trim();
  const houseNameError = document.getElementById("houseNameError");

  if (houseNameValue === '') {
    houseNameError.textContent = 'House Name / Flat No. is required';
    houseNameError.style.color = 'red'
    document.getElementById("houseName").style.border = "solid 2px red";
    return false;
  }

  houseNameError.textContent = '';
  document.getElementById("houseName").style.border = "solid 2px green";
  return true;
}

function streetValidation() {
  const streetValue = document.getElementById("street").value.trim();
  const streetError = document.getElementById("streetError");

  if (streetValue === '') {
    streetError.textContent = 'Street is required';
    streetError.style.color = 'red'
    document.getElementById("street").style.border = "solid 2px red";
    return false;
  }

  streetError.textContent = '';
  document.getElementById("street").style.border = "solid 2px green";
  return true;
}

function cityValidation() {
  const cityValue = document.getElementById("city").value.trim();
  const cityError = document.getElementById("cityError");
  const cityRegex = /^[a-zA-Z\s]+$/;

  if (cityValue === '') {
    cityError.textContent = 'City is required';
    cityError.style.color = 'red'
    document.getElementById("city").style.border = "solid 2px red";
    return false;
  }

  if (!cityRegex.test(cityValue)) {
    cityError.textContent = 'City should contain only letters and spaces';
    cityError.style.color = 'red'
    document.getElementById("city").style.border = "solid 2px red";
    return false;
  }

  cityError.textContent = '';
  document.getElementById("city").style.border = "solid 2px green";
  return true;
}

function stateValidation() {
  const stateValue = document.getElementById("state").value.trim();
  const stateError = document.getElementById("stateError");
  const stateRegex = /^[a-zA-Z\s]+$/;

  if (stateValue === '') {
    stateError.textContent = 'State is required';
    stateError.style.color = 'red'
    document.getElementById("state").style.border = "solid 2px red";
    return false;
  }

  if (!stateRegex.test(stateValue)) {
    stateError.textContent = 'State should contain only letters and spaces';
    stateError.style.color = 'red'
    document.getElementById("state").style.border = "solid 2px red";
    return false;
  }

  stateError.textContent = '';
  document.getElementById("state").style.border = "solid 2px green";
  return true;
}

function countryValidation() {
  const countryValue = document.getElementById("country").value.trim();
  const countryError = document.getElementById("countryError");
  const countryRegex = /^[a-zA-Z\s]+$/;

  if (countryValue === '') {
    countryError.textContent = 'Country is required';
    countryError.style.color = 'red'
    document.getElementById("country").style.border = "solid 2px red";
    return false;
  }

  if (!countryRegex.test(countryValue)) {
    countryError.textContent = 'Country should contain only letters and spaces';
    countryError.style.color = 'red'
    document.getElementById("country").style.border = "solid 2px red";
    return false;
  }

  countryError.textContent = '';
  document.getElementById("country").style.border = "solid 2px green";
  return true;
}

function postalCodeValidation() {
  const postalCodeValue = document.getElementById("postalCode").value.trim();
  const postalCodeError = document.getElementById("postalCodeError");
  const postalCodeRegex = /^[0-9]{6}$/;

  if (postalCodeValue === '') {
    postalCodeError.textContent = 'Postal Code is required';
    postalCodeError.style.color = 'red'
    document.getElementById("postalCode").style.border = "solid 2px red";
    return false;
  }

  if (!postalCodeRegex.test(postalCodeValue)) {
    postalCodeError.textContent = 'Postal Code should contain exactly 6 digits';
    postalCodeError.style.color = 'red'
    document.getElementById("postalCode").style.border = "solid 2px red";
    return false;
  }

  postalCodeError.textContent = '';
  document.getElementById("postalCode").style.border = "solid 2px green";
  return true;
}

function addressTypeValidation() {
  const addressTypeValue = document.getElementById("addressType").value;
  const addressTypeError = document.getElementById("addressTypeError");

  if (addressTypeValue === '') {
    addressTypeError.textContent = 'Address Type is required';
    addressTypeError.style.color = 'red'
    document.getElementById("addressType").style.border = "solid 2px red";
    return false;
  }

  addressTypeError.textContent = '';
  document.getElementById("addressType").style.border = "solid 2px green";
  return true;
}
















// Function to validate the name field
function validateName() {
  const nameValue = document.getElementById('newName').value.trim();
  const nameError = document.getElementById('newNameError');
  const nameRegex = /^(?!\s*$)[a-zA-Z\s]{4,}$/;

  if (nameValue === '') {
    nameError.textContent = 'Name is required';
    nameError.style.color = 'red';
    document.getElementById('newName').style.border = '2px solid red';
    return false;
  }

  if (!nameRegex.test(nameValue)) {
    nameError.textContent = 'Name must be at least 4 characters long and contain only letters and spaces (no single spaces allowed)';
    nameError.style.color = 'red';
    document.getElementById('newName').style.border = '2px solid red';
    return false;
  }

  nameError.textContent = '';
  document.getElementById('newName').style.border = '2px solid green';
  return true;
}

// Function to handle editing the name
document.getElementById('saveNameBtn').addEventListener('click', async () => {
  const isValid = validateName();

  if (isValid) {
    const newName = document.getElementById('newName').value.trim();

    try {
      const response = await fetch('/profile/updateName', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ newName })
      });

      if (response.ok) {
        // Update the name in the profile section without refreshing
        document.querySelector('.form-group.col-md-6 input[name="name"]').value = newName;
        $('#editNameModal').modal('hide');
        window.location.href = '/profile';
      } else {
        // Handle error if any
        console.error('Error updating name');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  }
});

  
    document.addEventListener('DOMContentLoaded', () => {
  const editAddressForms = document.querySelectorAll('.edit-address-form');

  editAddressForms.forEach((form,index) => {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const isValid = houseNameValidation(index) &&
        streetValidation(index) &&
        cityValidation(index) &&
        stateValidation(index) &&
        countryValidation(index) &&
        postalCodeValidation(index);

      if (isValid) {
        const addressId = form.dataset.addressId;
        const formData = new FormData(form);
        const addressData = {};

        for (const [key, value] of formData.entries()) {
          addressData[key] = value;
        }

        try {
          const response = await fetch(`/profile/update-address/${addressId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(addressData),
          });

          if (!response.ok) {
            throw new Error('Error updating address');
          }

          // Close the modal
          const modal = document.querySelector(`#editAddressModal${index}`);
          const modalBackdrop = document.querySelector('.modal-backdrop');

          modal.classList.remove('show');
          modal.style.display = 'none';

          if (modalBackdrop) {
            modalBackdrop.remove();
          }

          // Reload the page
          window.location.reload();
        } catch (err) {
          console.error(err);
          alert(err.message);
        }
      }
    });
  });
});

// function houseNameValidation(index) {
//   const houseNameValue = document.getElementById(`houseName${index}`).value.trim();
//   const houseNameError = document.getElementById(`houseNameError${index}`);

//   if (houseNameValue === '') {
//     houseNameError.textContent = 'House Name / Flat No. is required';
//     houseNameError.style.color = 'red'
//     document.getElementById(`houseName${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   houseNameError.textContent = '';
//   document.getElementById(`houseName${index}`).style.border = "solid 2px green";
//   return true;
// }

// function streetValidation(index) {
//   const streetValue = document.getElementById(`street${index}`).value.trim();
//   const streetError = document.getElementById(`streetError${index}`);

//   if (streetValue === '') {
//     streetError.textContent = 'Street is required';
//     streetError.style.color = 'red'
//     document.getElementById(`street${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   streetError.textContent = '';
//   document.getElementById(`street${index}`).style.border = "solid 2px green";
//   return true;
// }

// function cityValidation(index) {
//   const cityValue = document.getElementById(`city${index}`).value.trim();
//   const cityError = document.getElementById(`cityError${index}`);
//   const cityRegex = /^[a-zA-Z\s]+$/;

//   if (cityValue === '') {
//     cityError.textContent = 'City is required';
//     cityError.style.color = 'red'
//     document.getElementById(`city${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   if (!cityRegex.test(cityValue)) {
//     cityError.textContent = 'City should contain only letters and spaces';
//     cityError.style.color = 'red'
//     document.getElementById(`city${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   cityError.textContent = '';
//   document.getElementById(`city${index}`).style.border = "solid 2px green";
//   return true;
// }

// function stateValidation(index) {
//   const stateValue = document.getElementById(`state${index}`).value.trim();
//   const stateError = document.getElementById(`stateError${index}`);
//   const stateRegex = /^[a-zA-Z\s]+$/;

//   if (stateValue === '') {
//     stateError.textContent = 'State is required';
//     stateError.style.color = 'red'
//     document.getElementById(`state${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   if (!stateRegex.test(stateValue)) {
//     stateError.textContent = 'State should contain only letters and spaces';
//     stateError.style.color = 'red'
//     document.getElementById(`state${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   stateError.textContent = '';
//   document.getElementById(`state${index}`).style.border = "solid 2px green";
//   return true;
// }

// function countryValidation(index) {
//   const countryValue = document.getElementById(`country${index}`).value.trim();
//   const countryError = document.getElementById(`countryError${index}`);
//   const countryRegex = /^[a-zA-Z\s]+$/;

//   if (countryValue === '') {
//     countryError.textContent = 'Country is required';
//     countryError.style.color = 'red'
//     document.getElementById(`country${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   if (!countryRegex.test(countryValue)) {
//     countryError.textContent = 'Country should contain only letters and spaces';
//     countryError.style.color = 'red'
//     document.getElementById(`country${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   countryError.textContent = '';
//   document.getElementById(`country${index}`).style.border = "solid 2px green";
//   return true;
// }

// function postalCodeValidation(index) {
//   const postalCodeValue = document.getElementById(`postalCode${index}`).value.trim();
//   const postalCodeError = document.getElementById(`postalCodeError${index}`);
//   const postalCodeRegex = /^[0-9]{6}$/;

//   if (postalCodeValue === '') {
//     postalCodeError.textContent = 'Postal Code is required';
//     postalCodeError.style.color = 'red'
//     document.getElementById(`postalCode${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   if (!postalCodeRegex.test(postalCodeValue)) {
//     postalCodeError.textContent = 'Postal Code should contain exactly 6 digits';
//     postalCodeError.style.color = 'red'
//     document.getElementById(`postalCode${index}`).style.border = "solid 2px red";
//     return false;
//   }

//   postalCodeError.textContent = '';
//   document.getElementById(`postalCode${index}`).style.border = "solid 2px green";
//   return true;
// }


    $(document).ready(function () {
      let selectedOrderId;

      // Listen for the 'show.bs.modal' event on the cancelOrderModal
      $('#cancelOrderModal').on('show.bs.modal', function (event) {
        // Get the button that triggered the modal
        const button = $(event.relatedTarget);

        // Get the order ID from the button's data attribute
        selectedOrderId = button.data('order-id');
        console.log('Modal is being shown for orderId:', selectedOrderId);
      });

      $('#confirmCancelOrder').click(function () {
        const cancellationReason = $('#cancellationReason').val();
        console.log('Cancelling order with orderId:', selectedOrderId);
        cancelOrder(selectedOrderId, cancellationReason);
      });

      function cancelOrder(orderId, cancellationReason) {
        console.log('Cancelling order with orderId:', orderId);
        fetch(`/orders/${orderId}/cancel`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ cancellationReason })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                title: 'Success',
                text: data.message,
                icon: 'success',
              }).then(() => {
                updateOrderStatus(orderId, 'Cancelled');
              });

                      setTimeout(() => {
                window.location.reload();
              },5000);
              // $('#cancelOrderModal').modal('hide');
              // showToast('Order cancelled successfully', 'success');

              // window.location.reload();
              // Swal.fire({
              //   icon: 'success',
              //   title: 'Order Cancelled',
              //   text: 'Order cancelled successfully',
              //   timer: 3000,

              // });
            } else {
              showToast('Failed to cancel order', 'error');
            }
          })
          .catch(error => {
            console.error('Error cancelling order:', error);
            showToast('An error occurred while cancelling the order', 'error');
          });
      }
    })
    function updateOrderStatus(orderId, status) {
      const orderRow = $(`.order-row[data-order-id="${orderId}"]`);
      const statusBadge = orderRow.find('.order-status');
      statusBadge.text(status);
      statusBadge.removeClass('badge-warning badge-info badge-primary badge-success badge-danger');
      statusBadge.addClass(`badge-${status.toLowerCase() === 'pending' ? 'warning' : status.toLowerCase() === 'confirmed' ? 'info' : status.toLowerCase() === 'shipped' ? 'primary' : status.toLowerCase() === 'delivered' ? 'success' : 'danger'}`);
    }

    function showToast(message, type) {
      const toast = $(`
    <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000">
      <div class="toast-header bg-${type} text-white">
        <strong class="mr-auto">Order Status</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="toast-body">
        ${message}
      </div>
    </div>
  `);

      $('.toast-container').append(toast);
      toast.toast('show');
    }



    function confirmDeleteAddress(addressId) {
      console.log(addressId);

      fetch(`/profile/address/${addressId}`, {
        method: 'DELETE',
      })
        .then(response => {
          if (response.ok) {
            $('#deleteAddressModal' + addressId).modal('hide');; // Hide the modal
            $('#addressSection_' + addressId).remove(); // Remove the address section from UI
            Swal.fire({
              icon: 'success',
              title: 'Address Deleted',
              text: 'Address successfully deleted'
            });
            setTimeout(() => {
        window.location.reload();
      },1000);
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Failed to delete address'
            });
          }
        })
        .catch(error => {
          console.error('Error deleting address:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while deleting the address'
          });
        });
    }



    $(document).ready(function () {
      let selectedOrderId;

      // Listen for the 'show.bs.modal' event on the returnOrderModal
      $('#returnOrderModal').on('show.bs.modal', function (event) {
        // Get the button that triggered the modal
        const button = $(event.relatedTarget);

        // Get the order ID from the button's data attribute
        selectedOrderId = button.data('order-id');
        console.log('Modal is being shown for orderId:', selectedOrderId);
      });

      // Handle click on the confirmReturnOrder button
      $('#confirmReturnOrder').click(function () {
        const returnReason = $('#returnReason').val();
        console.log('Returning order with orderId:', selectedOrderId);
        returnOrder(selectedOrderId, returnReason);
      });

      function returnOrder(orderId, returnReason) {
        console.log('Returning order with orderId:', orderId);
        fetch(`/orders/${orderId}/return`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            returnReason
          })
        })
          .then(response => response.json())
          .then(data => {
            console.log("data test", data);
            if (data.success) {
              $('#returnOrderModal').modal('hide');
              Swal.fire({
                title: 'Success',
                text: data.message,
                icon: 'success',
              }).then(() => {
                updateOrderStatus(orderId, 'Returned');
              });

                        setTimeout(() => {
                  window.location.reload();
                }, 1000);
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to return product'
              });
            }
          })
          .catch(error => {
            console.error('Error returning order:', error);
            showToast('An error occurred while returning the order', 'error');
          });
      }
    });




    function showOrderDetails(orderId) {
            fetch(`/orders/${orderId}`)
                .then(response => response.json())
                .then(order => {
                    const orderDetailsBody = document.getElementById('orderDetailsBody');
                    orderDetailsBody.innerHTML = `
                        <p><strong>Order ID:</strong> ${order.oId}</p>
                        <p><strong>Customer:</strong> ${order.user.name}</p>
                        <p><strong>Order Date:</strong> ${new Date(order.orderDate).toLocaleString()}</p>
                        <p><strong>Payment Method:</strong> ${order.paymentMethod}</p>
                        <p><strong>Payment Status:</strong> ${order.paymentStatus}</p>
                        <p><strong>Shipping Address:</strong> ${order.shippingAddress.street}, ${order.shippingAddress.city}, ${order.shippingAddress.state}, ${order.shippingAddress.country}, ${order.shippingAddress.postalCode}</p>
                        <p><strong>Order Notes:</strong> ${order.orderNotes}</p>
                        <p><strong>Cancellation Reason:</strong> ${order.cancellationReason}</p>
                        <h5>Order Items:</h5>
                        <ul>
                            ${order.items.map(item => `
                                <li>
                                    <img src="${item.image[0]}" alt="${item.title}" class="img-fluid" style="max-width: 50px;">
                                    ${item.title} - ${item.productPrice} x ${item.quantity} = ${item.price}
                                </li>
                            `).join('')}
                        </ul>
                        <p><strong>Bill Total:</strong> ${order.billTotal}</p>
                    `;
                })
                .catch(error => {
                    console.error('Error fetching order details:', error);
                });
        }


 
      
  document.querySelectorAll('.invoice-button').forEach(function (button) {
    button.addEventListener('click', function () {
      const orderData = JSON.parse(this.dataset.order);
      const doc = new jsPDF();

      // Add company logo (replace 'company-logo.png' with your actual logo file path)
 

      // Add some styles
      doc.setTextColor(50);
      doc.setFontSize(20);
      doc.setFontStyle('bold');
      doc.text('Invoice', doc.internal.pageSize.getWidth() / 2, 30, null, null, 'center');

      // Add order information
      doc.setFontSize(14);
      doc.setFontStyle('normal');
      doc.text(`Order ID: ${orderData.oId}`, 14, 50);
      doc.text(`Customer: ${orderData.user.name}`, 14, 58);
      doc.text(`Order Date: ${new Date(orderData.orderDate).toLocaleString()}`, 14, 66);
      doc.text(`Shipping Address: ${orderData.shippingAddress.street}, ${orderData.shippingAddress.city}, ${orderData.shippingAddress.state}, ${orderData.shippingAddress.country}, ${orderData.shippingAddress.postalCode}`, 14, 74);

      // Add table header
      doc.setFontSize(14);
      doc.setFontStyle('bold');
      doc.setTextColor(255);
      doc.setFillColor(180, 180, 180);
      doc.rect(14, 82, doc.internal.pageSize.getWidth() - 28, 10, 'FD');
      doc.text('Product', 14, 90);
      doc.text('Price', 94, 90);
      doc.text('Quantity', 124, 90);
      doc.text('Total', 154, 90);

      // Add table body
      doc.setFontSize(14);
      doc.setFontStyle('normal');
      doc.setTextColor(50);
      let startY = 98;
      orderData.items.forEach(item => {
  

        doc.text(`${item.title} `,20, startY);
        doc.text(`  ${item.productPrice ? item.productPrice.toString() : ''}`, 94, startY);
        doc.text(`  ${item.quantity}`, 124, startY);
        doc.text(`  ${item.price ? item.price.toString() : ''}`, 154, startY);
        startY += 8;
      });

      // Add bill total
      doc.setFontSize(14);
      doc.setFontStyle('bold');
      doc.setTextColor(255);
      doc.setFillColor(180, 180, 180);
      doc.rect(14, startY, doc.internal.pageSize.getWidth() - 28, 10, 'FD');
      doc.text(`Bill Total: ${orderData.billTotal}`, 135, startY + 8);

      // Save the PDF
      doc.save(`${orderData.oId}.pdf`);
    });
  });







  async function initiateFailureRazorPayPayment(orderId, billTotal) {
    try {
        const response = await fetch('/retry/razorpayOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                billTotal
            })
        });

        const data = await response.json();
        const options = {
            key:'rzp_test_U3ASSzGpya8Oey',
            amount: data.amount,
            order_id: data.id,
            name:'Wander',
            description: 'Payment for Order',
            handler: function (response) {
                console.log('payment successfull', response);
                handlePaymentResponse(response, orderId);
            }
            ,
            theme:{
                color:'#002D75'
            }
        };
       

        const rzp = new Razorpay(options);
        rzp.open();
    } catch (error) {
        console.error('Error initiating Razorpay payment:', error);
    }
}



function handlePaymentResponse(response, orderId){
    if (response.razorpay_payment_id) {
        Swal.fire({
            title: 'Payment Success',
            text: 'Your Order is placed successfully.Thank You',
            icon: 'success',
            timer:1500,
            timerProgressBar: true,
        });      
        updatePaymentStatus(orderId,'Success');
        setTimeout(() => {
            window.location.reload()
        },1500)
    } else {
        Swal.fire({
            icon: 'error',
            title: 'Payment Failed',
            text: 'Order is not placed'
        });
        updatePaymentStatus(orderId,'Failed');
    }
}

function updatePaymentStatus(orderId,status){
    fetch('/update/paymentStatus', {
        method:'PATCH',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            orderId:orderId,
            status: status
        })
    })
    .then(response => response.json())
    .then(data => {
        console.log('Payment status updated:', data);
    })
    .catch(error => {
            console.error('Error updating payment status:', error);
    });
}










// script.js
// document.querySelectorAll('a[href^="/orders/"]').forEach(linkElement => {
//   linkElement.addEventListener('click', async (event) => {
//     event.preventDefault();
//     const url = linkElement.href;
//     const response = await fetch(url);
//     const blob = await response.blob();
//     const downloadUrl = window.URL.createObjectURL(blob);
//     const link = document.createElement('a');
//     link.href = downloadUrl;
//     link.download = `invoice_${url.split('/').pop()}.pdf`;
//     link.click();
//   });
// });

  </script>
</body>

</html>