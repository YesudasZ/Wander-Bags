<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
  <meta charset="utf-8">
  <title>Wander - eCommerce HTML Template</title>
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta property="og:title" content="">
  <meta property="og:type" content="">
  <meta property="og:url" content="">
  <meta property="og:image" content="">
  <!-- Favicon -->
  <link rel="shortcut icon" type="image/x-icon" href="../user-assets/imgs/theme/favicon.svg">
  <!-- Template CSS -->
  <link rel="stylesheet" href="../user-assets/css/main.css?v=3.4">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <style>
    .cart-section {
      border: 1px solid #ccc;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .address-card .card {
      border: none;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .address-card .card:hover {
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
    }

    .address-card .form-check {
      display: flex;
      align-items: center;
    }

    .address-card .form-check-label {
      flex-grow: 1;
      margin-left: 10px;
    }

    .address-card .edit-icon {
      cursor: pointer;
      color: #007bff;
      transition: all 0.3s ease;
    }

    .address-card .edit-icon:hover {
      color: #0056b3;
    }

    .cart-item {
      border: 1px solid #ccc;
      padding: 10px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
    }

    .cart-item:hover {
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
    }

    .cart-item .card-body {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 100%;
    }

    .cart-item-actions,
    .cart-item-total,
    .cart-item-select {
      margin-top: 10px;
    }

    .cart-item-actions .btn {
      padding: 0.25rem 0.5rem;
    }

    .payment-section {
      background-color: #f8f9fa;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .place-order-btn {
      width: 100%;
      margin-top: 20px;
    }


    /* Footer Styling */
    footer.main {
      padding-top: 40px;
      padding-bottom: 40px;
    }

    .widget-about p {
      color: #a8a8a8;
      line-height: 1.8;
    }

    .social-icons a {
      display: inline-block;
      margin-right: 10px;
    }

    .widget-title {
      color: #fff;
      font-weight: bold;
    }

    .footer-list li {
      list-style: none;
    }

    .download-app img {
      max-width: 130px;
      margin-right: 10px;
      margin-bottom: 10px;
    }

    .font-sm {
      font-size: 14px;
    }

    .text-light {
      color: #fff !important;
    }

    .text-muted {
      color: #a8a8a8 !important;
    }

    .header-info-right ul li {
      display: inline;
      margin-left: 20px;
    }

    .header-info-right ul li:first-child {
      margin-left: 0;
    }

    .header-info-right a {
      text-decoration: none;
      color: #343a40;
      /* Adjust text color as needed */
    }

    .header-info-right a:hover {
      text-decoration: underline;
    }

    .header-info-right .fi-rs-user {
      margin-right: 5px;
    }
  </style>
</head>

<body>
  <!-- Quick view -->
  <header class="header-area header-style-4 header-height-2">
    <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
      <div class="container">
        <div class="header-wrap d-flex justify-content-between align-items-center">
          <div class="logo logo-width-1">
            <a href="index.html"><img src="user-assets/imgs/theme/logo.svg" alt="logo"></a>
          </div>
          <div class="header-right d-flex align-items-center">
            <div class="search-style-2">
              <form action="#">
                <select class="select-active">
                  <option>All Categories</option>
                </select>
                <input type="text" placeholder="Search for items...">
              </form>
            </div>
            <div class="header-action-right d-flex align-items-center">
              <div class="header-action-2">
                <div class="header-action-icon-2">
                  <a href="/wishList">
                    <img class="svgInject" alt="Wander" src="user-assets/imgs/theme/icons/icon-heart.svg">
                    <% if (wishlistCount> 0) { %>
                      <span class="pro-count blue">
                        <%= wishlistCount %>
                      </span>
                      <% } %>
                  </a>
                </div>
                <div class="header-action-icon-2">
                  <a class="mini-cart-icon" href="/cart">
                    <img alt="Wander" src="user-assets/imgs/theme/icons/icon-cart.svg">
                    <% if (cartCount> 0) { %>
                      <span class="pro-count blue">
                        <%= cartCount %>
                      </span>
                      <% } %>
                  </a>
                </div>
              </div>
              <div class="header-info header-info-right text-end">
                <ul class="list-inline mb-0">

                  <li class="dropdown nav-item m-5">
                    <a class="dropdown-toggle text-black" href="#" role="button" id="userDropdown"
                      data-bs-toggle="dropdown" aria-expanded="false">
                      <i class="fi-rs-user"></i>
                      <%= user.name %>
                    </a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                      <a class="dropdown-item" href="/profile"><i
                          class="material-icons md-perm_identity"></i>Profile</a>
                      <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Orders</a>
                      <a class="dropdown-item" href="#"><i
                          class="material-icons md-account_balance_wallet"></i>Wallet</a>
                      <div class="dropdown-divider"></div>
                      <a class="dropdown-item text-danger" href="/logout"><i
                          class="material-icons md-exit_to_app"></i>Logout</a>
                    </div>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="header-bottom header-bottom-bg-color sticky-bar">
      <div class="container">
        <div class="header-wrap header-space-between position-relative">
          <div class="logo logo-width-1 d-block d-lg-none">
            <a href="index.html"><img src="user-assets/imgs/theme/logo.svg" alt="logo"></a>
          </div>
          <div class="header-nav d-none d-lg-flex">
            <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
              <nav>
                <ul>
                  <li><a class="active" href="/home">Home</a></li>
                  <li><a href="/shop">Shop</a></li>
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </header>





  <main>
    <div class="container mt-5 mb-5">
      <h1 class="text-center mb-4"></h1>
      <div class="row">
        <div class="col-md-4">

          <div class="address-section">
            <h3>Delivery Address</h3>
            <div class="existing-address">
              <div class="address-list">
                <!-- Display existing addresses dynamically -->
                <form id="placeOrderForm">
                  <% let isDefault = true; %>
                  <% user.address.forEach((address, index)=> { %>
                    <div class="address-card mb-3">
                      <div class="card">
                        <div class="card-body">
                          <div class="form-check">
                            <input type="radio" name="address" id="<%= address._id %>" value="<%= address._id %>"
                              class="form-check-input" required <% if (isDefault) { %> checked <% } %>>
                            <label for="<%= address._id %>" class="form-check-label">
                              <%= address.houseName %> <br>
                              <%= address.street %><br>
                              <%= address.city %><br>
                              <%= address.state %><br>
                              <%= address.country %><br>
                              <%= address.postalCode %>
                            </label>
                          </div>
                          <button type="button" class="btn btn-primary" data-toggle="modal"
                            data-target="#editAddressModal<%= index %>">Edit</button>
                        </div>
                      </div>
                    </div>
                    <% isDefault = false; %>
                  <% }); %>
                </form>
              </div>
            </div>
          </div>
          <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#addAddressModal">
            Add Address
          </button>
        </div>

        <div class="col-md-8">
          <div class="cart-section p-5">
            <div class="mb-20">
              <h4>Your Orders</h4>
            </div>
            <div class="cart-items">
              <!-- Cart items -->
              <% cart.items.forEach(item=> { %>
                <div class="cart-item mb-3">
                  <div class="row g-0 align-items-center">
                    <div class="col-md-3">
                      <img src="/productimages/<%= item.productId.images[0] %>" alt="Product Image" class="img-fluid">
                    </div>

                    <div class="col-md-6">
                      <div class="card-body">
                        <h5 class="card-title">
                          <%= item.productId.name %>
                        </h5>
                        <p class="card-text">
                          <% if (item.productId.discountPrice) { %>
                            Price: ₹ <%=item.productId.discountPrice %>

                              <% } else { %>
                                Price: ₹ <%= item.productId.price %>
                                  <% } %>
                        </p>
                      </div>
                    </div>
                    <div class="col-md-2">
                      <div class="d-flex justify-content-center align-items-center">
                        <!-- <button class="btn btn-sm  btn-outline-secondary  decrease-quantity" data-id="<%= item._id %>">-</button> -->
                        <input type="number"
                          class="form-control black-border black-spin-buttons trendy-quantity-input text-center"
                          value="<%= item.quantity %>" min="1" max="4" data-id="<%= item._id %>" readonly>
                        <!-- <button class="btn btn-sm btn-outline-success  increase-quantity" data-id="<%= item._id %>">+</button> -->

                      </div>

                      <div class="text-right subtotal mt-2" data-title="Total" id="price-<%= item._id %>">
                        <strong>Total: ₹ <span class="item-total">
                            <% if (item.productId.discountPrice) { %>
                              <%=item.productId.discountPrice * item.quantity %>

                                <% } else { %>
                                  <%= item.productId.price * item.quantity %>
                                    <% } %>/-
                          </span></strong>
                      </div>

                    </div>
                  </div>
                </div>
                <% }); %>
            </div>


            <div class="text-right">
              <button class="btn btn-primary" data-toggle="modal" data-target="#applyCouponModal">Apply Coupon</button>
            </div>

            <button type="button" class="btn btn-danger btn-sm mt-3" id="removeCouponBtn">Remove Coupon</button>

            <table class="table">
              <tbody>
                <tr>
                  <th colspan="3" id="cart-subtotal">SubTotal</th>
                  <td id="subtotalAmount">
                    <% let cartSubtotal=0; %>
                      <% cart.items.forEach(item=> { %>
                        <% if (item.productId.discountPrice) { %>
                          <% cartSubtotal +=(item.productId.discountPrice * item.quantity); %>
                            <% } else { %>
                              <% cartSubtotal +=(item.productId.price * item.quantity); %>
                                <% } %>
                                  <% }); %>
                                    ₹ <%= cartSubtotal %>/-
                  </td>
                </tr>
                <tr>
                  <th colspan="3">Shipping</th>
                  <td><em>Free Shipping</em></td>
                </tr>
                <tr id="couponDiscountRow" style="display: none;">
                  <th colspan="3">Coupon Discount</th>
                  <td id="couponDiscount">₹ 0.00</td>
                </tr>

                <tr>
                  <th colspan="3">Total</th>
                  <td><span class="font-xl text-brand fw-900" id="totalAmount"> ₹ <%= cartSubtotal %>/-</span></td>
                </tr>
              </tbody>
            </table>
            <div class="bt-1 border-color-1 mt-30 mb-30"></div>




            <div class="form-group">
              <label for="orderNotes">Order Notes (Optional)</label>
              <textarea class="form-control" id="orderNotes" rows="3"></textarea>
            </div>

            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
            <div class="form-group">
              <label>Payment Method:</label>
              <div class="d-flex align-items-center">
                <div class="form-check me-3 d-flex align-items-center">
                  <input class=" radio-button-smaller m-2" style="width: 20px;" type="radio" name="paymentMethod"
                    id="creditCard" value="Razorpay">
                  <label class="form-check-label" for="creditCard">Razorpay</label>
                </div>
                <div class="form-check me-3 d-flex align-items-center">
                  <input class=" radio-button-smaller m-2" style="width: 20px;" type="radio" name="paymentMethod"
                    id="Wallet" value="Wallet">
                  <label class="form-check-label" for="paypal">Wallet</label>
                </div>
                <div class="form-check me-3 d-flex align-items-center">
                  <input class=" radio-button-smaller m-2" style="width: 20px;" type="radio" name="paymentMethod"
                    id="cashOnDelivery" value="Cash On Delivery">
                  <label class="form-check-label" for="cashOnDelivery">Cash On Delivery</label>
                </div>
              </div>
              <div id="PaymentTypeError" class="error text-danger mt-2"></div>
            </div>

            <button type="button" class="btn btn-success btn-lg btn-block mt-30" id="placeOrderBtn">Place Order</button>
          </div>
        </div>
      </div>
    </div>
  </main>
  <!-- Edit Address Modal -->
  <% user.address.forEach((address, index)=> { %>
    <div class="modal fade" id="editAddressModal<%= index %>" tabindex="-1" role="dialog"
      aria-labelledby="editAddressModalLabel<%= index %>" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editAddressModalLabel<%= index %>">Edit Address</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <!-- Form for editing address -->
            <form id="editAddressForm<%= index %>" class="edit-address-form" data-address-id="<%= address._id %>">
              <div class="form-group">
                <label for="houseName<%= index %>">House Name / Flat No.<span class="required">*</span></label>
                <input type="text" class="form-control" id="edithouseName<%= index %>" name="houseName"
                  value="<%= address.houseName %>" required>
                <small id="edithouseNameError<%= index %>" class="error"></small>
              </div>
              <div class="form-group">
                <label for="street<%= index %>">Street<span class="required">*</span></label>
                <input type="text" class="form-control" id="editstreet<%= index %>" name="street"
                  value="<%= address.street %>" required>
                <small id="editstreetError<%= index %>" class="error"></small>
              </div>
              <div class="form-group">
                <label for="city<%= index %>">City <span class="required">*</span></label>
                <input type="text" class="form-control" id="editcity<%= index %>" name="city"
                  value="<%= address.city %>" pattern="^[a-zA-Z\s]+$" required>
                <small id="editcityError<%= index %>" class="error"></small>
              </div>
              <div class="form-group">
                <label for="state<%= index %>">State <span class="required">*</span></label>
                <input type="text" class="form-control" id="editstate<%= index %>" name="state"
                  value="<%= address.state %>" pattern="^[a-zA-Z\s]+$" required>
                <small id="editstateError<%= index %>" class="error"></small>
              </div>
              <div class="form-group">
                <label for="country<%= index %>">Country <span class="required">*</span></label>
                <input type="text" class="form-control" id="editcountry<%= index %>" name="country"
                  value="<%= address.country %>" pattern="^[a-zA-Z\s]+$" required>
                <small id="editcountryError<%= index %>" class="error"></small>
              </div>
              <div class="form-group">
                <label for="postalCode<%= index %>">Postal Code<span class="required">*</span></label>
                <input type="text" class="form-control" id="editpostalCode<%= index %>" name="postalCode"
                  value="<%= address.postalCode %>" pattern="^[0-9]{6}$" required>
                <small id="editpostalCodeError<%= index %>" class="error"></small>
              </div>
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Update</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    <% }) %>

      <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">

              <form id="addAddressForm" method="post" onsubmit="return validateForm(event)">
                <div class="row">
                  <div class="form-group col-md-6">
                    <label>House Name / Flat No.<span class="required">*</span></label>
                    <input class="form-control square" name="houseName" id="houseName" type="text">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-6">
                    <label>Street<span class="required">*</span></label>
                    <input class="form-control square" name="street" id="street" type="text">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-12">
                    <label>City <span class="required">*</span></label>
                    <input class="form-control square" name="city" id="city" type="text" pattern="^[a-zA-Z\s]+$">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-12">
                    <label>State <span class="required">*</span></label>
                    <input class="form-control square" name="state" id="state" type="text" pattern="^[a-zA-Z\s]+$">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-12">
                    <label>Country <span class="required">*</span></label>
                    <input class="form-control square" name="country" id="country" type="text" pattern="^[a-zA-Z\s]+$">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-12">
                    <label>Postalcode <span class="required">*</span></label>
                    <input class="form-control square" name="postalCode" id="postalCode" type="text" pattern="^[0-9]+$">
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <div class="form-group col-md-12">
                    <label>Type <span class="required">*</span></label>
                    <select class="form-control" id="addressType" name="addressType">
                      <option value="home">Home</option>
                      <option value="office">Office</option>
                    </select>
                    <small class="text-danger invalid-feedback"></small>
                  </div>
                  <!-- <div class="col-md-12">
                  <button type="submit" class="btn btn-fill-out submit" name="submit" value="Submit">Save</button>
                </div> -->
                </div>
              </form>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="submit" form="addAddressForm" class="btn btn-primary">Save</button>
            </div>
          </div>
        </div>
      </div>




      <div class="modal fade" id="applyCouponModal" tabindex="-1" role="dialog" aria-labelledby="applyCouponModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="applyCouponModalLabel">Apply Coupon</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <% if (coupons.length===0) { %>
                <p>No coupons available for this order.</p>
                <% } else { %>
                  <% coupons.forEach(coupon=> { %>
                    <div class="coupon-item">
                      <h6>
                        <%= coupon.name %>
                      </h6>
                      <p>Minimum Purchase Amount: ₹.<%= coupon.minimumAmount %>
                      </p>
                      <p>Maximum Discount Amount: ₹.<%= coupon.maximumAmount %>
                      </p>
                      <p>Discount: <%= coupon.discount %>%</p>
                      <p class="coupon-code">
                        <%= coupon.couponCode %>
                      </p>
                      <div class="form-check">
                        <input class="form-check-input" type="radio" name="selectedCoupon" id="coupon-<%= coupon._id %>"
                          value="<%= coupon._id %>">
                        <label class="form-check-label" for="coupon-<%= coupon._id %>">
                          Select this coupon
                        </label>
                      </div>
                    </div>
                    <% }) %>
                      <% } %>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" id="applyCouponBtn">Apply Coupon</button>
            </div>
          </div>
        </div>
      </div>




      <footer class="main bg-secondary text-light">
        <section class="section-padding footer-mid">
          <div class="container pt-15 pb-20">
            <div class="row">
              <div class="col-lg-4 col-md-6">
                <div class="widget-about font-md mb-md-5 mb-lg-0">
                  <div class="logo logo-width-1 wow fadeIn animated">
                    <a href="index.html"><img src="../user-assets/imgs/theme/logo.svg" alt="logo"></a>
                  </div>
                  <h5 class="mt-20 mb-10 fw-600 text-grey-4 wow fadeIn animated">Contact</h5>
                  <p class="wow fadeIn animated">
                    <strong>Address: </strong>562 Wellington Road, Street 32, San Francisco
                  </p>
                  <p class="wow fadeIn animated">
                    <strong>Phone: </strong>+01 2222 365 /(+91) 01 2345 6789
                  </p>
                  <p class="wow fadeIn animated">
                    <strong>Hours: </strong>10:00 - 18:00, Mon - Sat
                  </p>
                  <h5 class="mb-10 mt-30 fw-600 text-grey-4 wow fadeIn animated">Follow Us</h5>
                  <div class="mobile-social-icon wow fadeIn animated mb-sm-5 mb-md-0">
                    <a href="#"><img src="../user-assets/imgs/theme/icons/icon-facebook.svg" alt=""></a>
                    <a href="#"><img src="../user-assets/imgs/theme/icons/icon-twitter.svg" alt=""></a>
                    <a href="#"><img src="../user-assets/imgs/theme/icons/icon-instagram.svg" alt=""></a>
                    <a href="#"><img src="../user-assets/imgs/theme/icons/icon-pinterest.svg" alt=""></a>
                    <a href="#"><img src="../user-assets/imgs/theme/icons/icon-youtube.svg" alt=""></a>
                  </div>
                </div>
              </div>
              <div class="col-lg-2 col-md-3">
                <h5 class="widget-title wow fadeIn animated">About</h5>
                <ul class="footer-list wow fadeIn animated mb-sm-5 mb-md-0">
                  <li><a href="#">About Us</a></li>
                  <li><a href="#">Delivery Information</a></li>
                  <li><a href="#">Privacy Policy</a></li>
                  <li><a href="#">Terms &amp; Conditions</a></li>
                  <li><a href="#">Contact Us</a></li>
                  <li><a href="#">Support Center</a></li>
                </ul>
              </div>
              <div class="col-lg-2  col-md-3">
                <h5 class="widget-title wow fadeIn animated">My Account</h5>
                <ul class="footer-list wow fadeIn animated">
                  <li><a href="#">Sign In</a></li>
                  <li><a href="#">View Cart</a></li>
                  <li><a href="#">My Wishlist</a></li>
                  <li><a href="#">Track My Order</a></li>
                  <li><a href="#">Help</a></li>
                  <li><a href="#">Order</a></li>
                </ul>
              </div>
              <div class="col-lg-4">
                <h5 class="widget-title wow fadeIn animated">Install App</h5>
                <div class="row">
                  <div class="col-md-8 col-lg-12">
                    <p class="wow fadeIn animated">From App Store or Google Play</p>
                    <div class="download-app wow fadeIn animated">
                      <a href="#" class="hover-up mb-sm-4 mb-lg-0"><img class="active"
                          src="../user-assets/imgs/theme/app-store.jpg" alt=""></a>
                      <a href="#" class="hover-up"><img src="../user-assets/imgs/theme/google-play.jpg" alt=""></a>
                    </div>
                  </div>
                  <div class="col-md-4 col-lg-12 mt-md-3 mt-lg-0">
                    <p class="mb-20 wow fadeIn animated">Secured Payment Gateways</p>
                    <img class="wow fadeIn animated" src="../user-assets/imgs/theme/payment-method.png" alt="">
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
        <div class="container pb-20 wow fadeIn animated">
          <div class="row">
            <div class="col-12 mb-20">
              <div class="footer-bottom"></div>
            </div>
            <div class="col-lg-6">
              <p class="float-md-left font-sm text-muted mb-0">&copy; 2022, <strong class="text-brand">Wander</strong> -
                HTML Ecommerce Template </p>
            </div>
            <div class="col-lg-6">
              <p class="text-lg-end text-start font-sm text-muted mb-0">
                Designed by <a href="http://alithemes.com" target="_blank">Alithemes.com</a>. All rights reserved
              </p>
            </div>
          </div>
        </div>
      </footer>
      <!-- Preloader Start -->
      <!-- <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
          <div class="preloader-inner position-relative">
            <div class="text-center">
              <h5 class="mb-5">Now Loading</h5>
              <div class="loader">
                <div class="bar bar1"></div>
                <div class="bar bar2"></div>
                <div class="bar bar3"></div>
              </div>
            </div>
          </div>
        </div>
      </div> -->
      <!-- Vendor JS-->
      <script src="../user-assets/js/vendor/modernizr-3.6.0.min.js"></script>
      <script src="../user-assets/js/vendor/jquery-3.6.0.min.js"></script>
      <script src="../user-assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
      <script src="../user-assets/js/vendor/bootstrap.bundle.min.js"></script>
      <script src="../user-assets/js/plugins/slick.js"></script>
      <script src="../user-assets/js/plugins/jquery.syotimer.min.js"></script>
      <script src="../user-assets/js/plugins/wow.js"></script>
      <script src="../user-assets/js/plugins/jquery-ui.js"></script>
      <script src="../user-assets/js/plugins/perfect-scrollbar.js"></script>
      <script src="../user-assets/js/plugins/magnific-popup.js"></script>
      <script src="../user-assets/js/plugins/select2.min.js"></script>
      <script src="../user-assets/js/plugins/waypoints.js"></script>
      <script src="../user-assets/js/plugins/counterup.js"></script>
      <script src="../user-assets/js/plugins/jquery.countdown.min.js"></script>
      <script src="../user-assets/js/plugins/images-loaded.js"></script>
      <script src="../user-assets/js/plugins/isotope.js"></script>
      <script src="../user-assets/js/plugins/scrollup.js"></script>
      <script src="../user-assets/js/plugins/jquery.vticker-min.js"></script>
      <script src="../user-assets/js/plugins/jquery.theia.sticky.js"></script>
      <script src="../user-assets/js/plugins/jquery.elevatezoom.js"></script>
      <!-- Template  JS -->
      <script src="./../user-assets/js/main.js?v=3.4"></script>
      <script src="./../user-assets/js/shop.js?v=3.4"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.7.2/icons/pencil-square.min.svg"></script>

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.all.min.js"></script>

      <script>










        document.addEventListener('DOMContentLoaded', () => {
          const editAddressForms = document.querySelectorAll('.edit-address-form');

          editAddressForms.forEach((form, index) => {
            form.addEventListener('submit', async (e) => {
              e.preventDefault();

              const isValid = edithouseNameValidation(index) &&
                editstreetValidation(index) &&
                editcityValidation(index) &&
                editstateValidation(index) &&
                editcountryValidation(index) &&
                editpostalCodeValidation(index);

              if (isValid) {
                const addressId = form.dataset.addressId;
                const formData = new FormData(form);
                const addressData = {};

                for (const [key, value] of formData.entries()) {
                  addressData[key] = value;
                }

                try {
                  const response = await fetch(`/profile/update-address/${addressId}`, {
                    method: 'PUT',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(addressData),
                  });

                  if (!response.ok) {
                    throw new Error('Error updating address');
                  }

                  // Close the modal
                  const modal = document.querySelector(`#editAddressModal${index}`);
                  const modalBackdrop = document.querySelector('.modal-backdrop');

                  modal.classList.remove('show');
                  modal.style.display = 'none';

                  if (modalBackdrop) {
                    modalBackdrop.remove();
                  }

                  Swal.fire({
                title: 'Success',
                text: 'Address updated successfully ',
                icon: 'success',
              }).then(() => {
            window.location.reload()
              });

                  
                } catch (err) {
                  console.error(err);
                  alert(err.message);
                }
              }
            });
          });
        });


        function edithouseNameValidation(index) {
          const houseNameValue = document.getElementById(`edithouseName${index}`).value.trim();
          const houseNameError = document.getElementById(`edithouseNameError${index}`);

          if (houseNameValue === '') {
            houseNameError.textContent = 'House Name / Flat No. is required';
            houseNameError.style.color = 'red'
            document.getElementById(`edithouseName${index}`).style.border = "solid 2px red";
            return false;
          }

          houseNameError.textContent = '';
          document.getElementById(`edithouseName${index}`).style.border = "solid 2px green";
          return true;
        }

        function editstreetValidation(index) {
          const streetValue = document.getElementById(`editstreet${index}`).value.trim();
          const streetError = document.getElementById(`editstreetError${index}`);

          if (streetValue === '') {
            streetError.textContent = 'Street is required';
            streetError.style.color = 'red'
            document.getElementById(`editstreet${index}`).style.border = "solid 2px red";
            return false;
          }

          streetError.textContent = '';
          document.getElementById(`editstreet${index}`).style.border = "solid 2px green";
          return true;
        }

        function editcityValidation(index) {
          const cityValue = document.getElementById(`editcity${index}`).value.trim();
          const cityError = document.getElementById(`editcityError${index}`);
          const cityRegex = /^[a-zA-Z\s]+$/;

          if (cityValue === '') {
            cityError.textContent = 'City is required';
            cityError.style.color = 'red'
            document.getElementById(`editcity${index}`).style.border = "solid 2px red";
            return false;
          }

          if (!cityRegex.test(cityValue)) {
            cityError.textContent = 'City should contain only letters and spaces';
            cityError.style.color = 'red'
            document.getElementById(`editcity${index}`).style.border = "solid 2px red";
            return false;
          }

          cityError.textContent = '';
          document.getElementById(`editcity${index}`).style.border = "solid 2px green";
          return true;
        }

        function editstateValidation(index) {
          const stateValue = document.getElementById(`editstate${index}`).value.trim();
          const stateError = document.getElementById(`editstateError${index}`);
          const stateRegex = /^[a-zA-Z\s]+$/;

          if (stateValue === '') {
            stateError.textContent = 'State is required';
            stateError.style.color = 'red'
            document.getElementById(`editstate${index}`).style.border = "solid 2px red";
            return false;
          }

          if (!stateRegex.test(stateValue)) {
            stateError.textContent = 'State should contain only letters and spaces';
            stateError.style.color = 'red'
            document.getElementById(`editstate${index}`).style.border = "solid 2px red";
            return false;
          }

          stateError.textContent = '';
          document.getElementById(`editstate${index}`).style.border = "solid 2px green";
          return true;
        }

        function editcountryValidation(index) {
          const countryValue = document.getElementById(`editcountry${index}`).value.trim();
          const countryError = document.getElementById(`editcountryError${index}`);
          const countryRegex = /^[a-zA-Z\s]+$/;

          if (countryValue === '') {
            countryError.textContent = 'Country is required';
            countryError.style.color = 'red'
            document.getElementById(`editcountry${index}`).style.border = "solid 2px red";
            return false;
          }

          if (!countryRegex.test(countryValue)) {
            countryError.textContent = 'Country should contain only letters and spaces';
            countryError.style.color = 'red'
            document.getElementById(`editcountry${index}`).style.border = "solid 2px red";
            return false;
          }

          countryError.textContent = '';
          document.getElementById(`editcountry${index}`).style.border = "solid 2px green";
          return true;
        }

        function editpostalCodeValidation(index) {
          const postalCodeValue = document.getElementById(`editpostalCode${index}`).value.trim();
          const postalCodeError = document.getElementById(`editpostalCodeError${index}`);
          const postalCodeRegex = /^[0-9]{6}$/;

          if (postalCodeValue === '') {
            postalCodeError.textContent = 'Postal Code is required';
            postalCodeError.style.color = 'red'
            document.getElementById(`editpostalCode${index}`).style.border = "solid 2px red";
            return false;
          }

          if (!postalCodeRegex.test(postalCodeValue)) {
            postalCodeError.textContent = 'Postal Code should contain exactly 6 digits';
            postalCodeError.style.color = 'red'
            document.getElementById(`editpostalCode${index}`).style.border = "solid 2px red";
            return false;
          }

          postalCodeError.textContent = '';
          document.getElementById(`editpostalCode${index}`).style.border = "solid 2px green";
          return true;
        }




        // JavaScript
        const placeOrderForm = document.getElementById('placeOrderForm');
        const placeOrderBtn = document.getElementById('placeOrderBtn');



        placeOrderBtn.addEventListener('click', () => {
          const addressRadios = placeOrderForm.querySelectorAll('input[name="address"]');
          const selectedAddress = Array.from(addressRadios).find(radio => radio.checked);

          if (!selectedAddress) {
            Swal.fire({
              title: 'Reminder',
              text: 'Please select address',
              icon: 'warning'
            });
            return;
          }

          const paymentMethodRadio = document.querySelectorAll('input[name="paymentMethod"]');
          let paymentMethod = null;
          paymentMethodRadio.forEach(method => {
            if (method.checked) {
              paymentMethod = method.value;
            }
          });

          console.log(paymentMethod, "Payment Method");
          console.log("working");
          if (!paymentMethod) {
            Swal.fire({
              title: 'Reminder',
              text: 'Payment method pending',
              icon: 'warning'
            });
            return;
          }

          console.log("working test");

          fetch('/cart/items', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          })
            .then(response => response.json())
            .then(data => {
              const cartItems = data.items;
              console.log("data", data);
              // Check if any product is out of stock
              const outOfStockProducts = cartItems.filter(item => item.productId.countInStock < item.quantity);
              if (outOfStockProducts.length > 0) {
                const outOfStockProductNames = outOfStockProducts.map(item => item.productId.name).join(', ');
                Swal.fire({
                  title: 'Out of Stock',
                  text: `The following products are out of stock: ${outOfStockProductNames}`,
                  icon: 'warning',
                });
                return; // Stop further execution
              } else {




                const addressId = selectedAddress.value;

                const orderNotes = document.getElementById('orderNotes').value;

                const totalAmount = parseFloat(document.getElementById('totalAmount').textContent.replace('₹', ''));
                const couponDiscount = parseFloat(document.getElementById('couponDiscount').textContent.replace('₹', ''));

                console.log("ta", totalAmount);
                console.log("c", couponDiscount);


                if (paymentMethod === "Cash On Delivery" && totalAmount > 1000) {
                  console.log("tereefkjaghlkfhla");
                  Swal.fire({
                    title: 'Warning',
                    text: 'Above 1000 INR order is not allowed for Cash on Delivery',
                    icon: 'warning'
                  });
                  return;
                }


                if (paymentMethod == "Cash On Delivery") {

                  fetch('/checkout', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',

                    },
                    body: JSON.stringify({ addressId, paymentMethod, orderNotes, totalAmount, couponDiscount }),
                  })
                    .then(response => {
                      if (response.ok) {

                        console.log('Order placed successfully');
                        window.location.href = '/orderPlaced';

                      } else {

                        console.error('Failed to place order');

                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);

                    });
                } else if (paymentMethod == "Razorpay") {

                  createRazorpayOrder(totalAmount)
                  function createRazorpayOrder(totalAmount) {
                    fetch('/create/razorpayOrder', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json',
                      },
                      body: JSON.stringify({ totalAmount })
                    })
                      .then(response => response.json())
                      .then(data => {
                        console.log("TEST", data);
                        const options = {
                          key: 'rzp_test_U3ASSzGpya8Oey',
                          amount: data.amount,
                          order_id: data.id,
                          name: 'Wander',
                          description: 'Payment for Order',
                          handler: function (response) {
                            console.log('payment successfull', response);
                            placeOrderAfterPayment('Success');
                          }
                          ,
                          theme: {
                            color: '#002D75'
                          }
                        };

                        const rzp = new Razorpay(options);
                        rzp.on('payment.failed', function (response) {
                          handlePaymentFailure(response);

                          function handlePaymentFailure(response) {
                            Swal.fire({
                              title: 'Payment Failed',
                              text: 'Your payment failed. Please try again.',
                              icon: 'error',
                              allowOutsideClick: false,
                            }).then((result) => {
                              console.log("Working")
                              if (result.isConfirmed) {
                                console.log("Working-2")
                                placeOrderAfterPayment('Failed')
                                  .then(() => {
                                    window.location.href = '/orderFailed';
                                  })
                                  .catch(error => {
                                    console.error('Error placing order:', error);
                                  })
                              }
                            })
                          }

                        })
                        rzp.open();
                      })
                      .catch(error => {
                        console.error('Error creating RazorPay order:', error);
                      })
                  }

                  function placeOrderAfterPayment(paymentStatus) {

                    fetch('/checkout', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json',

                      },
                      body: JSON.stringify({ addressId, paymentMethod, orderNotes, paymentStatus, totalAmount, couponDiscount }),
                    })
                      .then(response => {
                        if (response.ok) {

                          console.log('Order placed successfully');
                          if (paymentStatus == "Success") {
                            window.location.href = '/orderPlaced';
                          } else {
                            window.location.href = '/orderFailed';
                          }


                        } else {

                          console.error('Failed to place order');

                        }
                      })
                      .catch(error => {
                        console.error('Error:', error);

                      })
                  }

                } else if (paymentMethod == "Wallet") {
                  // Check if wallet balance is sufficient
                  fetch('/wallet/balance', {
                    method: 'GET',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                  })
                    .then(response => response.json())
                    .then(data => {
                      const walletBalance = data.walletBalance;
                      const totalAmount = parseFloat(document.getElementById('totalAmount').textContent.replace('₹', ''));
                      console.log("wa", walletBalance);
                      console.log("ot", totalAmount);
                      if (walletBalance >= totalAmount) {
                        // Wallet balance is sufficient, proceed with order placement
                        placeOrderWithWallet(addressId, paymentMethod, orderNotes, totalAmount, couponDiscount);
                      } else {
                        // Wallet balance is insufficient
                        Swal.fire({
                          title: 'Insufficient Balance',
                          text: 'Your wallet balance is insufficient. Please choose another payment option.',
                          icon: 'warning',
                        });
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                    });

                }

                function placeOrderWithWallet(addressId, paymentMethod, orderNotes, totalAmount, couponDiscount) {
                  fetch('/checkout', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ addressId, paymentMethod, orderNotes, totalAmount, couponDiscount }),
                  })
                    .then(response => {
                      if (response.ok) {
                        console.log('Order placed successfully');
                        window.location.href = '/orderPlaced';
                      } else {
                        console.error('Failed to place order');
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                    });
                }
              }

            })
            .catch(error => {
              console.error('Error:', error); // Handle error here
            });

        })









        function validateForm(event) {
          event.preventDefault();


          const houseNameField = document.getElementById('houseName');
          const streetField = document.getElementById('street');
          const cityField = document.getElementById('city');
          const stateField = document.getElementById('state');
          const countryField = document.getElementById('country');
          const postalCodeField = document.getElementById('postalCode');
          const addressTypeField = document.getElementById('addressType');


          const invalidFeedbacks = document.querySelectorAll('.invalid-feedback');
          invalidFeedbacks.forEach(feedback => feedback.textContent = '');

          let isValid = true;


          if (houseNameField.value.trim() === '') {
            houseNameField.nextElementSibling.textContent = 'Please enter a house name/flat no.';
            isValid = false;
          }

          if (streetField.value.trim() === '') {
            streetField.nextElementSibling.textContent = 'Please enter a street.';
            isValid = false;
          }



          if (isValid) {

            addAddress();
          }
        }

        function addAddress() {
          const formData = new FormData(document.getElementById('addAddressForm'));

          fetch('/profile/addAddress', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(Object.fromEntries(formData))
          })
            .then(response => {
              if (response.ok) {
                return response.text();
              } else {
                throw new Error('Failed to add address');
              }
            })
            .then(data => {
              Swal.fire({
                icon: 'success',
                title: 'Address Added',
                text: data
              });


              const modal = document.getElementById('addAddressModal');
              const modalBackdrop = document.querySelector('.modal-backdrop');
              modal.classList.remove('show');
              modal.setAttribute('aria-hidden', 'true');
              modal.style.display = 'none';
              if (modalBackdrop) {
                modalBackdrop.remove();
              }


              document.getElementById('addAddressForm').reset();


              fetchAndDisplayAddress();
              Swal.fire({
                title: 'Success',
                text: 'Address updated successfully ',
                icon: 'success',
              }).then(() => {
            window.location.reload()
              });
             

            })
            .catch(error => {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message
              });
            });
        }

        function fetchAndDisplayAddress() {
          fetch('/checkout')
            .then(response => response.json())
            .then(addresses => {
              console.log("tes", addresses);
              const addressList = document.querySelector('.address-list');
              addressList.innerHTML = '';

              addresses.forEach(address => {
                const addressCard = document.createElement('div');
                addressCard.classList.add('address-card', 'mb-3');
                addressCard.innerHTML = `
          <div class="card">
            <div class="card-body">
              <div class="form-check">
                <input type="radio" name="address" id="${address._id}" value="${address._id}" class="form-check-input" required>
                <label for="${address._id}" class="form-check-label">
                  ${address.houseName}<br>
                  ${address.street}<br>
                  ${address.city}<br>
                  ${address.state}<br>
                  ${address.country}<br>
                  ${address.postalCode}
                </label>
              </div>
              <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editAddressModal">Edit</button>
            </div>
          </div>
        `;

                addressList.appendChild(addressCard);
              });
            })
            .catch(error => {
              console.error('Error fetching addresses:', error);
            });
        }




        let couponApplied = false;

        document.getElementById('applyCouponBtn').addEventListener('click', async () => {
          if (couponApplied) {
            Swal.fire({
              icon: 'error',
              title: 'Coupon Already Applied',
              text: 'You have already applied a coupon to this order.',
            });
            return;
          }

try {
  

          const selectedCouponId = document.querySelector('input[name="selectedCoupon"]:checked')?.value;
          if (!selectedCouponId) {
            // No coupon selected
            return;
          }

          const selectedCoupon = await fetchCouponDetails(selectedCouponId);
          if (!selectedCoupon) {
            // Coupon not found
            return;
          }

          if (selectedCoupon.status!== 'Active') {
            Swal.fire({
              icon: 'error',
              title: 'Coupon Not Active',
              text: 'This coupon is not active. Please try another one.',
            });
            return;
          }


          const totalAmount = parseFloat(document.getElementById('totalAmount').textContent.replace('₹', ''));
          const minimumAmount = selectedCoupon.minimumAmount;
          console.log("total", totalAmount);
          if (totalAmount < minimumAmount) {
            Swal.fire({
              icon: 'error',
              title: 'Minimum Purchase Amount',
              text: `Minimum purchase amount for this coupon is ₹${minimumAmount}.`,
            });
            return;
          }

          const discountAmount = calculateDiscount(totalAmount, selectedCoupon);
          const newTotalAmount = totalAmount - discountAmount;

          // Update the UI
          document.getElementById('totalAmount').textContent = `₹${newTotalAmount.toFixed(2)}/-`;
          document.getElementById('couponDiscount').textContent = `₹${discountAmount.toFixed(2)}`;
          document.getElementById('couponDiscount').parentElement.style.display = 'table-row';


          document.getElementById('applyCouponBtn').disabled = true;
          couponApplied = true;


          // Close the modal
          $('#applyCouponModal').modal('hide');
        } catch (error) {
          if (error.message === 'Coupon is not active or has expired') {
      Swal.fire({
        icon: 'error',
        title: 'Coupon Inactive or Expired',
        text: 'The selected coupon is not active or has expired.',
      });
    } else {
      console.error('Error fetching coupon details:', error);
    }
  }
}

        );


        document.getElementById('removeCouponBtn').addEventListener('click', () => {
          const totalAmount = parseFloat(document.getElementById('totalAmount').textContent.replace('₹', ''));
          const couponDiscount = parseFloat(document.getElementById('couponDiscount').textContent.replace('₹', ''));

          const newTotalAmount = totalAmount + couponDiscount;

          document.getElementById('totalAmount').textContent = `₹${newTotalAmount.toFixed(2)}/-`;
          document.getElementById('couponDiscount').textContent = `₹0.00`;
          document.getElementById('couponDiscount').parentElement.style.display = 'none';

          document.getElementById('applyCouponBtn').disabled = false;
          couponApplied = false;
        });

        function calculateDiscount(totalAmount, coupon) {
          const discountPercentage = coupon.discount / 100;
          const discountAmount = totalAmount * discountPercentage;
          const maximumAmount = coupon.maximumAmount;

          return discountAmount > maximumAmount ? maximumAmount : discountAmount;
        }

        async function fetchCouponDetails(couponId) {
          console.log("working", couponId);
          try {
            const response = await fetch(`/coupons/${couponId}`);
            const coupon = await response.json();
            return coupon;
          } catch (error) {
            if (error.message === 'Coupon is not active or has expired') {
      Swal.fire({
        icon: 'error',
        title: 'Coupon Inactive or Expired',
        text: 'The selected coupon is not active or has expired.',
      });
    } else {
      console.error('Error fetching coupon details:', error);
    }
  }
}




      </script>

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


</body>

</html>